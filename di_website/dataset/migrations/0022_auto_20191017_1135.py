# Generated by Django 2.2.3 on 2019-10-17 11:35

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('datasection', '0019_auto_20191017_1135'),
        ('taggit', '0002_auto_20150616_2121'),
        ('dataset', '0021_auto_20191017_0455'),
    ]

    operations = [
        migrations.AddField(
            model_name='datasetpage',
            name='report',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='datasection.Report'),
        ),
        migrations.CreateModel(
            name='DataSetTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_topics', to='dataset.DatasetPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_datasettopic_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSetSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_sources', to='dataset.DatasetPage')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='datasection.DataSource', verbose_name='Data Source')),
            ],
        ),
        migrations.AddField(
            model_name='datasetpage',
            name='topics',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='dataset.DataSetTopic', to='taggit.Tag', verbose_name='Topics'),
        ),
    ]
