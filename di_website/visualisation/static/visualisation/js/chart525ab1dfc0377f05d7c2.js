(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{1098:function(e,t,r){"use strict";var o=r(12),i=r(25).BADNUM,a=r(221),n=r(652),l=r(654);function s(e){return e&&"string"==typeof e}e.exports=function(e,t){var r,c=t._length,p=new Array(c);r=t.geojson?function(e){return s(e)||o(e)}:s;for(var y=0;y<c;y++){var d=p[y]={},u=t.locations[y],f=t.z[y];r(u)&&o(f)?(d.loc=u,d.z=f):(d.loc=null,d.z=i),d.index=y}return n(p,t),a(e,t,{vals:t.z,containerStr:"",cLetter:"z"}),l(p,t),p}},1099:function(e,t,r){"use strict";var o=r(80),i=r(894),a=r(3).fillText;e.exports=function(e,t,r){var n,l,s,c,p=e.cd,y=p[0].trace,d=e.subplot;for(l=0;l<p.length;l++)if(c=!1,(n=p[l])._polygons){for(s=0;s<n._polygons.length;s++)n._polygons[s].contains([t,r])&&(c=!c),n._polygons[s].contains([t+360,r])&&(c=!c);if(c)break}if(c&&n)return e.x0=e.x1=e.xa.c2p(n.ct),e.y0=e.y1=e.ya.c2p(n.ct),e.index=n.index,e.location=n.loc,e.z=n.z,e.zLabel=o.tickText(d.mockAxis,d.mockAxis.c2l(n.z),"hover").text,e.hovertemplate=n.hovertemplate,function(e,t,r){if(t.hovertemplate)return;var o=r.hi||t.hoverinfo,n=String(r.loc),l="all"===o?i.hoverinfo.flags:o.split("+"),s=-1!==l.indexOf("name"),c=-1!==l.indexOf("location"),p=-1!==l.indexOf("z"),y=-1!==l.indexOf("text"),d=[];!s&&c?e.nameOverride=n:(s&&(e.nameOverride=t.name),c&&d.push(n));p&&d.push(e.zLabel);y&&a(r,t,d);e.extraText=d.join("<br>")}(e,y,n,d.mockAxis),[e]}},1100:function(e,t,r){"use strict";e.exports=function(e,t,r,o,i){e.location=t.location,e.z=t.z;var a=o[i];return a.fIn&&a.fIn.properties&&(e.properties=a.fIn.properties),e.ct=a.ct,e}},1101:function(e,t,r){"use strict";e.exports=function(e,t){var r,o,i,a,n,l=e.cd,s=e.xaxis,c=e.yaxis,p=[];if(!1===t)for(r=0;r<l.length;r++)l[r].selected=0;else for(r=0;r<l.length;r++)(i=(o=l[r]).ct)&&(a=s.c2p(i),n=c.c2p(i),t.contains([a,n],null,r,e)?(p.push({pointNumber:r,lon:i[0],lat:i[1]}),o.selected=1):o.selected=0);return p}},1217:function(e,t,r){"use strict";var o=r(894),i=r(112),a=r(154).hovertemplateAttrs,n=r(59),l=r(32).extendFlat;e.exports=l({locations:{valType:"data_array",editType:"calc",description:["Sets which features found in *geojson* to plot using","their feature `id` field."].join(" ")},z:{valType:"data_array",editType:"calc",description:"Sets the color values."},geojson:{valType:"any",role:"info",editType:"calc",description:["Sets the GeoJSON data associated with this trace.","It can be set as a valid GeoJSON object or as a URL string.","Note that we only accept GeoJSONs of type *FeatureCollection* or *Feature*","with geometries of type *Polygon* or *MultiPolygon*."].join(" ")},featureidkey:l({},o.featureidkey,{description:["Sets the key in GeoJSON features which is used as id to match the items","included in the `locations` array.","Support nested property, for example *properties.name*."].join(" ")}),below:{valType:"string",role:"info",editType:"plot",description:["Determines if the choropleth polygons will be inserted","before the layer with the specified ID.","By default, choroplethmapbox traces are placed above the water layers.","If set to '',","the layer will be inserted above every existing layer."].join(" ")},text:o.text,hovertext:o.hovertext,marker:{line:{color:l({},o.marker.line.color,{editType:"plot"}),width:l({},o.marker.line.width,{editType:"plot"}),editType:"calc"},opacity:l({},o.marker.opacity,{editType:"plot"}),editType:"calc"},selected:{marker:{opacity:l({},o.selected.marker.opacity,{editType:"plot"}),editType:"plot"},editType:"plot"},unselected:{marker:{opacity:l({},o.unselected.marker.opacity,{editType:"plot"}),editType:"plot"},editType:"plot"},hoverinfo:o.hoverinfo,hovertemplate:a({},{keys:["properties"]}),showlegend:l({},n.showlegend,{dflt:!1})},i("",{cLetter:"z",editTypeOverride:"calc"}))},1218:function(e,t,r){"use strict";var o=r(12),i=r(3),a=r(219),n=r(81),l=r(913).makeBlank,s=r(895);function c(e){var t,r=e[0].trace,o=r._opts;if(r.selectedpoints){for(var a=n.makeSelectedPointStyleFns(r),l=0;l<e.length;l++){var s=e[l];s.fOut&&(s.fOut.properties.mo2=a.selectedOpacityFn(s))}t={type:"identity",property:"mo2"}}else t=i.isArrayOrTypedArray(r.marker.opacity)?{type:"identity",property:"mo"}:r.marker.opacity;return i.extendFlat(o.fill.paint,{"fill-opacity":t}),i.extendFlat(o.line.paint,{"line-opacity":t}),o}e.exports={convert:function(e){var t=e[0].trace,r=!0===t.visible&&0!==t._length,n={layout:{visibility:"none"},paint:{}},p={layout:{visibility:"none"},paint:{}},y=t._opts={fill:n,line:p,geojson:l()};if(!r)return y;var d=s.extractTraceFeature(e);if(!d)return y;var u,f,h,m=a.makeColorScaleFuncFromTrace(t),v=t.marker,g=v.line||{};i.isArrayOrTypedArray(v.opacity)&&(u=function(e){var t=e.mo;return o(t)?+i.constrain(t,0,1):0}),i.isArrayOrTypedArray(g.color)&&(f=function(e){return e.mlc}),i.isArrayOrTypedArray(g.width)&&(h=function(e){return e.mlw});for(var x=0;x<e.length;x++){var b=e[x],T=b.fOut;if(T){var w=T.properties;w.fc=m(b.z),u&&(w.mo=u(b)),f&&(w.mlc=f(b)),h&&(w.mlw=h(b)),b.ct=w.ct,b._polygons=s.feature2polygons(T)}}var k=u?{type:"identity",property:"mo"}:v.opacity;return i.extendFlat(n.paint,{"fill-color":{type:"identity",property:"fc"},"fill-opacity":k}),i.extendFlat(p.paint,{"line-color":f?{type:"identity",property:"mlc"}:g.color,"line-width":h?{type:"identity",property:"mlw"}:g.width,"line-opacity":k}),n.layout.visibility="visible",p.layout.visibility="visible",y.geojson={type:"FeatureCollection",features:d},c(e),y},convertOnSelect:c}},1343:function(e,t,r){"use strict";e.exports={attributes:r(1217),supplyDefaults:r(1344),colorbar:r(746),calc:r(1098),plot:r(1345),hoverPoints:r(1099),eventData:r(1100),selectPoints:r(1101),styleOnSelect:function(e,t){t&&t[0].trace._glTrace.updateOnSelect(t)},getBelow:function(e,t){for(var r=t.getMapLayers(),o=r.length-2;o>=0;o--){var i=r[o].id;if("string"==typeof i&&0===i.indexOf("water"))for(var a=o+1;a<r.length;a++)if("string"==typeof(i=r[a].id)&&-1===i.indexOf("plotly-"))return i}},moduleType:"trace",name:"choroplethmapbox",basePlotModule:r(1071),categories:["mapbox","gl","noOpacity","showLegend"],meta:{hr_name:"choropleth_mapbox",description:["GeoJSON features to be filled are set in `geojson`","The data that describes the choropleth value-to-color mapping","is set in `locations` and `z`."].join(" ")}}},1344:function(e,t,r){"use strict";var o=r(3),i=r(155),a=r(1217);e.exports=function(e,t,r,n){function l(r,i){return o.coerce(e,t,a,r,i)}var s=l("locations"),c=l("z"),p=l("geojson");o.isArrayOrTypedArray(s)&&s.length&&o.isArrayOrTypedArray(c)&&c.length&&("string"==typeof p&&""!==p||o.isPlainObject(p))?(l("featureidkey"),t._length=Math.min(s.length,c.length),l("below"),l("text"),l("hovertext"),l("hovertemplate"),l("marker.line.width")&&l("marker.line.color"),l("marker.opacity"),i(e,t,n,l,{prefix:"",cLetter:"z"}),o.coerceSelectionMarkerOpacity(t,l)):t.visible=!1}},1345:function(e,t,r){"use strict";var o=r(1218).convert,i=r(1218).convertOnSelect,a=r(779).traceLayerPrefix;function n(e,t){this.type="choroplethmapbox",this.subplot=e,this.uid=t,this.sourceId="source-"+t,this.layerList=[["fill",a+t+"-fill"],["line",a+t+"-line"]],this.below=null}var l=n.prototype;l.update=function(e){this._update(o(e))},l.updateOnSelect=function(e){this._update(i(e))},l._update=function(e){var t=this.subplot,r=this.layerList,o=t.belowLookup["trace-"+this.uid];t.map.getSource(this.sourceId).setData(e.geojson),o!==this.below&&(this._removeLayers(),this._addLayers(e,o),this.below=o);for(var i=0;i<r.length;i++){var a=r[i],n=a[0],l=a[1],s=e[n];t.setOptions(l,"setLayoutProperty",s.layout),"visible"===s.layout.visibility&&t.setOptions(l,"setPaintProperty",s.paint)}},l._addLayers=function(e,t){for(var r=this.subplot,o=this.layerList,i=this.sourceId,a=0;a<o.length;a++){var n=o[a],l=n[0],s=e[l];r.addLayer({type:l,id:n[1],source:i,layout:s.layout,paint:s.paint},t)}},l._removeLayers=function(){for(var e=this.subplot.map,t=this.layerList,r=t.length-1;r>=0;r--)e.removeLayer(t[r][1])},l.dispose=function(){var e=this.subplot.map;this._removeLayers(),e.removeSource(this.sourceId)},e.exports=function(e,t){var r=t[0].trace,i=new n(e,r.uid),a=i.sourceId,l=o(t),s=i.below=e.belowLookup["trace-"+r.uid];return e.map.addSource(a,{type:"geojson",data:l.geojson}),i._addLayers(l,s),t[0].trace._glTrace=i,i}},258:function(e,t,r){"use strict";e.exports=r(1343)},652:function(e,t,r){"use strict";var o=r(3);e.exports=function(e,t){for(var r=0;r<e.length;r++)e[r].i=r;o.mergeArray(t.text,e,"tx"),o.mergeArray(t.texttemplate,e,"txt"),o.mergeArray(t.hovertext,e,"htx"),o.mergeArray(t.customdata,e,"data"),o.mergeArray(t.textposition,e,"tp"),t.textfont&&(o.mergeArrayCastPositive(t.textfont.size,e,"ts"),o.mergeArray(t.textfont.color,e,"tc"),o.mergeArray(t.textfont.family,e,"tf"));var i=t.marker;if(i){o.mergeArrayCastPositive(i.size,e,"ms"),o.mergeArrayCastPositive(i.opacity,e,"mo"),o.mergeArray(i.symbol,e,"mx"),o.mergeArray(i.color,e,"mc");var a=i.line;i.line&&(o.mergeArray(a.color,e,"mlc"),o.mergeArrayCastPositive(a.width,e,"mlw"));var n=i.gradient;n&&"none"!==n.type&&(o.mergeArray(n.type,e,"mgt"),o.mergeArray(n.color,e,"mgc"))}}},654:function(e,t,r){"use strict";var o=r(3);e.exports=function(e,t){o.isArrayOrTypedArray(t.selectedpoints)&&o.tagSelected(e,t)}},746:function(e,t,r){"use strict";e.exports={min:"zmin",max:"zmax"}},894:function(e,t,r){"use strict";var o=r(154).hovertemplateAttrs,i=r(800),a=r(112),n=r(59),l=r(113).defaultLine,s=r(32).extendFlat,c=i.marker.line;e.exports=s({locations:{valType:"data_array",editType:"calc",description:["Sets the coordinates via location IDs or names.","See `locationmode` for more info."].join(" ")},locationmode:i.locationmode,z:{valType:"data_array",editType:"calc",description:"Sets the color values."},geojson:s({},i.geojson,{description:["Sets optional GeoJSON data associated with this trace.","If not given, the features on the base map are used.","It can be set as a valid GeoJSON object or as a URL string.","Note that we only accept GeoJSONs of type *FeatureCollection* or *Feature*","with geometries of type *Polygon* or *MultiPolygon*."].join(" ")}),featureidkey:i.featureidkey,text:s({},i.text,{description:"Sets the text elements associated with each location."}),hovertext:s({},i.hovertext,{description:"Same as `text`."}),marker:{line:{color:s({},c.color,{dflt:l}),width:s({},c.width,{dflt:1}),editType:"calc"},opacity:{valType:"number",arrayOk:!0,min:0,max:1,dflt:1,role:"style",editType:"style",description:"Sets the opacity of the locations."},editType:"calc"},selected:{marker:{opacity:i.selected.marker.opacity,editType:"plot"},editType:"plot"},unselected:{marker:{opacity:i.unselected.marker.opacity,editType:"plot"},editType:"plot"},hoverinfo:s({},n.hoverinfo,{editType:"calc",flags:["location","z","text","name"]}),hovertemplate:o(),showlegend:s({},n.showlegend,{dflt:!1})},a("",{cLetter:"z",editTypeOverride:"calc"}))}}]);