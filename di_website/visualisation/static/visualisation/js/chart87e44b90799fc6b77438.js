(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{1069:function(t,e,n){"use strict";var o=t.exports={},r=n(937).locationmodeToLayer,a=n(1292).feature;o.getTopojsonName=function(t){return[t.scope.replace(/ /g,"-"),"_",t.resolution.toString(),"m"].join("")},o.getTopojsonPath=function(t,e){return t+e+".json"},o.getTopojsonFeatures=function(t,e){var n=r[t.locationmode],o=e.objects[n];return a(e,o).features}},1215:function(t,e,n){"use strict";var o=n(222).getSubplotCalcData,r=n(3).counterRegex,a=n(1339),i="geo",s=r(i),l={};l.geo={valType:"subplotid",role:"info",dflt:i,editType:"calc",description:["Sets a reference between this trace's geospatial coordinates and","a geographic map.","If *geo* (the default value), the geospatial coordinates refer to","`layout.geo`.","If *geo2*, the geospatial coordinates refer to `layout.geo2`,","and so on."].join(" ")},t.exports={attr:i,name:i,idRoot:i,idRegex:s,attrRegex:s,attributes:l,layoutAttributes:n(1216),supplyLayoutDefaults:n(1342),plot:function(t){for(var e=t._fullLayout,n=t.calcdata,r=e._subplots.geo,s=0;s<r.length;s++){var l=r[s],c=o(n,i,l),u=e[l]._subplot;u||(u=a({id:l,graphDiv:t,container:e._geolayer.node(),topojsonURL:t._context.topojsonURL,staticPlot:t._context.staticPlot}),e[l]._subplot=u),u.plot(c,e,t._promises)}},updateFx:function(t){for(var e=t._fullLayout,n=e._subplots.geo,o=0;o<n.length;o++){var r=e[n[o]];r._subplot.updateFx(e,r)}},clean:function(t,e,n,o){for(var r=o._subplots.geo||[],a=0;a<r.length;a++){var i=r[a],s=o[i]._subplot;!e[i]&&s&&(s.framework.remove(),s.clipDef.remove())}}}},1216:function(t,e,n){"use strict";var o=n(113),r=n(647).attributes,a=n(937),i=n(111).overrideAll,s={range:{valType:"info_array",role:"info",items:[{valType:"number"},{valType:"number"}],description:["Sets the range of this axis (in degrees),","sets the map's clipped coordinates."].join(" ")},showgrid:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not graticule are shown on the map."},tick0:{valType:"number",role:"info",dflt:0,description:["Sets the graticule's starting tick longitude/latitude."].join(" ")},dtick:{valType:"number",role:"info",description:["Sets the graticule's longitude/latitude tick step."].join(" ")},gridcolor:{valType:"color",role:"style",dflt:o.lightLine,description:["Sets the graticule's stroke color."].join(" ")},gridwidth:{valType:"number",role:"style",min:0,dflt:1,description:["Sets the graticule's stroke width (in px)."].join(" ")}};(t.exports=i({domain:r({name:"geo"},{description:["Note that geo subplots are constrained by domain.","In general, when `projection.scale` is set to 1.","a map will fit either its x or y domain, but not both."].join(" ")}),fitbounds:{valType:"enumerated",values:[!1,"locations","geojson"],dflt:!1,role:"info",editType:"plot",description:["Determines if this subplot's view settings are auto-computed to fit trace data.","On scoped maps, setting `fitbounds` leads to `center.lon` and `center.lat` getting auto-filled.","On maps with a non-clipped projection, setting `fitbounds` leads to `center.lon`, `center.lat`,","and `projection.rotation.lon` getting auto-filled.","On maps with a clipped projection, setting `fitbounds` leads to `center.lon`, `center.lat`,","`projection.rotation.lon`, `projection.rotation.lat`, `lonaxis.range` and `lonaxis.range`","getting auto-filled.","If *locations*, only the trace's visible locations are considered in the `fitbounds` computations.","If *geojson*, the entire trace input `geojson` (if provided) is considered in the `fitbounds` computations,","Defaults to *false*."].join(" ")},resolution:{valType:"enumerated",values:[110,50],role:"info",dflt:110,coerceNumber:!0,description:["Sets the resolution of the base layers.","The values have units of km/mm","e.g. 110 corresponds to a scale ratio of 1:110,000,000."].join(" ")},scope:{valType:"enumerated",role:"info",values:Object.keys(a.scopeDefaults),dflt:"world",description:"Set the scope of the map."},projection:{type:{valType:"enumerated",role:"info",values:Object.keys(a.projNames),description:"Sets the projection type."},rotation:{lon:{valType:"number",role:"info",description:["Rotates the map along parallels","(in degrees East).","Defaults to the center of the `lonaxis.range` values."].join(" ")},lat:{valType:"number",role:"info",description:["Rotates the map along meridians","(in degrees North)."].join(" ")},roll:{valType:"number",role:"info",description:["Roll the map (in degrees)","For example, a roll of *180* makes the map appear upside down."].join(" ")}},parallels:{valType:"info_array",role:"info",items:[{valType:"number"},{valType:"number"}],description:["For conic projection types only.","Sets the parallels (tangent, secant)","where the cone intersects the sphere."].join(" ")},scale:{valType:"number",role:"info",min:0,dflt:1,description:["Zooms in or out on the map view.","A scale of *1* corresponds to the largest zoom level","that fits the map's lon and lat ranges. "].join(" ")}},center:{lon:{valType:"number",role:"info",description:["Sets the longitude of the map's center.","By default, the map's longitude center lies at the middle of the longitude range","for scoped projection and above `projection.rotation.lon` otherwise."].join(" ")},lat:{valType:"number",role:"info",description:["Sets the latitude of the map's center.","For all projection types, the map's latitude center lies","at the middle of the latitude range by default."].join(" ")}},visible:{valType:"boolean",role:"info",dflt:!0,description:"Sets the default visibility of the base layers."},showcoastlines:{valType:"boolean",role:"info",description:"Sets whether or not the coastlines are drawn."},coastlinecolor:{valType:"color",role:"style",dflt:o.defaultLine,description:"Sets the coastline color."},coastlinewidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the coastline stroke width (in px)."},showland:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not land masses are filled in color."},landcolor:{valType:"color",role:"style",dflt:a.landColor,description:"Sets the land mass color."},showocean:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not oceans are filled in color."},oceancolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets the ocean color"},showlakes:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not lakes are drawn."},lakecolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets the color of the lakes."},showrivers:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not rivers are drawn."},rivercolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets color of the rivers."},riverwidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the rivers."},showcountries:{valType:"boolean",role:"info",description:"Sets whether or not country boundaries are drawn."},countrycolor:{valType:"color",role:"style",dflt:o.defaultLine,description:"Sets line color of the country boundaries."},countrywidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets line width (in px) of the country boundaries."},showsubunits:{valType:"boolean",role:"info",description:["Sets whether or not boundaries of subunits within countries","(e.g. states, provinces) are drawn."].join(" ")},subunitcolor:{valType:"color",role:"style",dflt:o.defaultLine,description:"Sets the color of the subunits boundaries."},subunitwidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the subunits boundaries."},showframe:{valType:"boolean",role:"info",description:"Sets whether or not a frame is drawn around the map."},framecolor:{valType:"color",role:"style",dflt:o.defaultLine,description:"Sets the color the frame."},framewidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the frame."},bgcolor:{valType:"color",role:"style",dflt:o.background,description:"Set the background color of the map"},lonaxis:s,lataxis:s},"plot","from-root")).uirevision={valType:"any",role:"info",editType:"none",description:["Controls persistence of user-driven changes in the view","(projection and center). Defaults to `layout.uirevision`."].join(" ")}},1292:function(t,e,n){"use strict";n.r(e),n.d(e,"bbox",(function(){return a})),n.d(e,"feature",(function(){return i})),n.d(e,"mesh",(function(){return u})),n.d(e,"meshArcs",(function(){return f})),n.d(e,"merge",(function(){return h})),n.d(e,"mergeArcs",(function(){return d})),n.d(e,"neighbors",(function(){return g})),n.d(e,"quantize",(function(){return y})),n.d(e,"transform",(function(){return r})),n.d(e,"untransform",(function(){return m}));var o=function(t){return t},r=function(t){if(null==t)return o;var e,n,r=t.scale[0],a=t.scale[1],i=t.translate[0],s=t.translate[1];return function(t,o){o||(e=n=0);var l=2,c=t.length,u=new Array(c);for(u[0]=(e+=t[0])*r+i,u[1]=(n+=t[1])*a+s;l<c;)u[l]=t[l],++l;return u}},a=function(t){var e,n=r(t.transform),o=1/0,a=o,i=-o,s=-o;function l(t){(t=n(t))[0]<o&&(o=t[0]),t[0]>i&&(i=t[0]),t[1]<a&&(a=t[1]),t[1]>s&&(s=t[1])}function c(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(c);break;case"Point":l(t.coordinates);break;case"MultiPoint":t.coordinates.forEach(l)}}for(e in t.arcs.forEach((function(t){for(var e,r=-1,l=t.length;++r<l;)(e=n(t[r],r))[0]<o&&(o=e[0]),e[0]>i&&(i=e[0]),e[1]<a&&(a=e[1]),e[1]>s&&(s=e[1])})),t.objects)c(t.objects[e]);return[o,a,i,s]},i=function(t,e){return"string"==typeof e&&(e=t.objects[e]),"GeometryCollection"===e.type?{type:"FeatureCollection",features:e.geometries.map((function(e){return s(t,e)}))}:s(t,e)};function s(t,e){var n=e.id,o=e.bbox,r=null==e.properties?{}:e.properties,a=l(t,e);return null==n&&null==o?{type:"Feature",properties:r,geometry:a}:null==o?{type:"Feature",id:n,properties:r,geometry:a}:{type:"Feature",id:n,bbox:o,properties:r,geometry:a}}function l(t,e){var n=r(t.transform),o=t.arcs;function a(t,e){e.length&&e.pop();for(var r=o[t<0?~t:t],a=0,i=r.length;a<i;++a)e.push(n(r[a],a));t<0&&function(t,e){for(var n,o=t.length,r=o-e;r<--o;)n=t[r],t[r++]=t[o],t[o]=n}(e,i)}function i(t){return n(t)}function s(t){for(var e=[],n=0,o=t.length;n<o;++n)a(t[n],e);return e.length<2&&e.push(e[0]),e}function l(t){for(var e=s(t);e.length<4;)e.push(e[0]);return e}function c(t){return t.map(l)}return function t(e){var n,o=e.type;switch(o){case"GeometryCollection":return{type:o,geometries:e.geometries.map(t)};case"Point":n=i(e.coordinates);break;case"MultiPoint":n=e.coordinates.map(i);break;case"LineString":n=s(e.arcs);break;case"MultiLineString":n=e.arcs.map(s);break;case"Polygon":n=c(e.arcs);break;case"MultiPolygon":n=e.arcs.map(c);break;default:return null}return{type:o,coordinates:n}}(e)}var c=function(t,e){var n={},o={},r={},a=[],i=-1;function s(t,e){for(var o in t){var r=t[o];delete e[r.start],delete r.start,delete r.end,r.forEach((function(t){n[t<0?~t:t]=1})),a.push(r)}}return e.forEach((function(n,o){var r,a=t.arcs[n<0?~n:n];a.length<3&&!a[1][0]&&!a[1][1]&&(r=e[++i],e[i]=n,e[o]=r)})),e.forEach((function(e){var n,a,i=function(e){var n,o=t.arcs[e<0?~e:e],r=o[0];t.transform?(n=[0,0],o.forEach((function(t){n[0]+=t[0],n[1]+=t[1]}))):n=o[o.length-1];return e<0?[n,r]:[r,n]}(e),s=i[0],l=i[1];if(n=r[s])if(delete r[n.end],n.push(e),n.end=l,a=o[l]){delete o[a.start];var c=a===n?n:n.concat(a);o[c.start=n.start]=r[c.end=a.end]=c}else o[n.start]=r[n.end]=n;else if(n=o[l])if(delete o[n.start],n.unshift(e),n.start=s,a=r[s]){delete r[a.end];var u=a===n?n:a.concat(n);o[u.start=a.start]=r[u.end=n.end]=u}else o[n.start]=r[n.end]=n;else o[(n=[e]).start=s]=r[n.end=l]=n})),s(r,o),s(o,r),e.forEach((function(t){n[t<0?~t:t]||a.push([t])})),a},u=function(t){return l(t,f.apply(this,arguments))};function f(t,e,n){var o,r,a;if(arguments.length>1)o=p(t,e,n);else for(r=0,o=new Array(a=t.arcs.length);r<a;++r)o[r]=r;return{type:"MultiLineString",arcs:c(t,o)}}function p(t,e,n){var o,r=[],a=[];function i(t){var e=t<0?~t:t;(a[e]||(a[e]=[])).push({i:t,g:o})}function s(t){t.forEach(i)}function l(t){t.forEach(s)}return function t(e){switch(o=e,e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"LineString":s(e.arcs);break;case"MultiLineString":case"Polygon":l(e.arcs);break;case"MultiPolygon":!function(t){t.forEach(l)}(e.arcs)}}(e),a.forEach(null==n?function(t){r.push(t[0].i)}:function(t){n(t[0].g,t[t.length-1].g)&&r.push(t[0].i)}),r}var h=function(t){return l(t,d.apply(this,arguments))};function d(t,e){var n={},o=[],r=[];function a(t){t.forEach((function(e){e.forEach((function(e){(n[e=e<0?~e:e]||(n[e]=[])).push(t)}))})),o.push(t)}function i(e){return function(t){for(var e,n=-1,o=t.length,r=t[o-1],a=0;++n<o;)e=r,r=t[n],a+=e[0]*r[1]-e[1]*r[0];return Math.abs(a)}(l(t,{type:"Polygon",arcs:[e]}).coordinates[0])}return e.forEach((function t(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"Polygon":a(e.arcs);break;case"MultiPolygon":e.arcs.forEach(a)}})),o.forEach((function(t){if(!t._){var e=[],o=[t];for(t._=1,r.push(e);t=o.pop();)e.push(t),t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].forEach((function(t){t._||(t._=1,o.push(t))}))}))}))}})),o.forEach((function(t){delete t._})),{type:"MultiPolygon",arcs:r.map((function(e){var o,r=[];if(e.forEach((function(t){t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].length<2&&r.push(t)}))}))})),(o=(r=c(t,r)).length)>1)for(var a,s,l=1,u=i(r[0]);l<o;++l)(a=i(r[l]))>u&&(s=r[0],r[0]=r[l],r[l]=s,u=a);return r})).filter((function(t){return t.length>0}))}}var v=function(t,e){for(var n=0,o=t.length;n<o;){var r=n+o>>>1;t[r]<e?n=r+1:o=r}return n},g=function(t){var e={},n=t.map((function(){return[]}));function o(t,n){t.forEach((function(t){t<0&&(t=~t);var o=e[t];o?o.push(n):e[t]=[n]}))}function r(t,e){t.forEach((function(t){o(t,e)}))}var a={LineString:o,MultiLineString:r,Polygon:r,MultiPolygon:function(t,e){t.forEach((function(t){r(t,e)}))}};for(var i in t.forEach((function t(e,n){"GeometryCollection"===e.type?e.geometries.forEach((function(e){t(e,n)})):e.type in a&&a[e.type](e.arcs,n)})),e)for(var s=e[i],l=s.length,c=0;c<l;++c)for(var u=c+1;u<l;++u){var f,p=s[c],h=s[u];(f=n[p])[i=v(f,h)]!==h&&f.splice(i,0,h),(f=n[h])[i=v(f,p)]!==p&&f.splice(i,0,p)}return n},m=function(t){if(null==t)return o;var e,n,r=t.scale[0],a=t.scale[1],i=t.translate[0],s=t.translate[1];return function(t,o){o||(e=n=0);var l=2,c=t.length,u=new Array(c),f=Math.round((t[0]-i)/r),p=Math.round((t[1]-s)/a);for(u[0]=f-e,e=f,u[1]=p-n,n=p;l<c;)u[l]=t[l],++l;return u}},y=function(t,e){if(t.transform)throw new Error("already quantized");if(e&&e.scale)l=t.bbox;else{if(!((n=Math.floor(e))>=2))throw new Error("n must be ≥2");var n,o=(l=t.bbox||a(t))[0],r=l[1],i=l[2],s=l[3];e={scale:[i-o?(i-o)/(n-1):1,s-r?(s-r)/(n-1):1],translate:[o,r]}}var l,c,u=m(e),f=t.objects,p={};function h(t){return u(t)}function d(t){var e;switch(t.type){case"GeometryCollection":e={type:"GeometryCollection",geometries:t.geometries.map(d)};break;case"Point":e={type:"Point",coordinates:h(t.coordinates)};break;case"MultiPoint":e={type:"MultiPoint",coordinates:t.coordinates.map(h)};break;default:return t}return null!=t.id&&(e.id=t.id),null!=t.bbox&&(e.bbox=t.bbox),null!=t.properties&&(e.properties=t.properties),e}for(c in f)p[c]=d(f[c]);return{type:"Topology",bbox:l,transform:e,objects:p,arcs:t.arcs.map((function(t){var e,n=0,o=1,r=t.length,a=new Array(r);for(a[0]=u(t[0],0);++n<r;)((e=u(t[n],n))[0]||e[1])&&(a[o++]=e);return 1===o&&(a[o++]=[0,0]),a.length=o,a}))}}},1339:function(t,e,n){"use strict";var o=n(24),r=n(15),a=n(3),i=n(52),s=n(81),l=n(646),c=n(82),u=n(80),f=n(225).getAutoRange,p=n(158),h=n(664).prepSelect,d=n(664).clearSelect,v=n(664).selectOnClick,g=n(1340),m=n(937),y=n(895),b=n(1069),x=n(1292).feature;function w(t){this.id=t.id,this.graphDiv=t.graphDiv,this.container=t.container,this.topojsonURL=t.topojsonURL,this.isStatic=t.staticPlot,this.topojsonName=null,this.topojson=null,this.projection=null,this.scope=null,this.viewInitial=null,this.fitScale=null,this.bounds=null,this.midPt=null,this.hasChoropleth=!1,this.traceHash={},this.layers={},this.basePaths={},this.dataPaths={},this.dataPoints={},this.clipDef=null,this.clipRect=null,this.bgRect=null,this.makeFramework()}n(1341)(o);var j=w.prototype;function M(t,e){var n=m.clipPad,o=t[0]+n,r=t[1]-n,a=e[0]+n,i=e[1]-n;o>0&&r<0&&(r+=360);var s=(r-o)/4;return{type:"Polygon",coordinates:[[[o,a],[o,i],[o+s,i],[o+2*s,i],[o+3*s,i],[r,i],[r,a],[r-s,a],[r-2*s,a],[r-3*s,a],[o,a]]]}}t.exports=function(t){return new w(t)},j.plot=function(t,e,n){var o=this,r=e[this.id],a=[],i=!1;for(var s in m.layerNameToAdjective)if("frame"!==s&&r["show"+s]){i=!0;break}for(var l=0;l<t.length;l++)if(t[0][0].trace.locationmode){i=!0;break}if(i){var c=b.getTopojsonName(r);null!==o.topojson&&c===o.topojsonName||(o.topojsonName=c,void 0===PlotlyGeoAssets.topojson[o.topojsonName]&&a.push(o.fetchTopojson()))}a=a.concat(y.fetchTraceGeoData(t)),n.push(new Promise((function(n,r){Promise.all(a).then((function(){o.topojson=PlotlyGeoAssets.topojson[o.topojsonName],o.update(t,e),n()})).catch(r)})))},j.fetchTopojson=function(){var t=this,e=b.getTopojsonPath(t.topojsonURL,t.topojsonName);return new Promise((function(n,r){o.json(e,(function(o,a){if(o)return 404===o.status?r(new Error(["plotly.js could not find topojson file at",e,".","Make sure the *topojsonURL* plot config option","is set properly."].join(" "))):r(new Error(["unexpected error while fetching topojson file at",e].join(" ")));PlotlyGeoAssets.topojson[t.topojsonName]=a,n()}))}))},j.update=function(t,e){var n=e[this.id];this.hasChoropleth=!1;for(var o=0;o<t.length;o++){var r=t[o],a=r[0].trace;"choropleth"===a.type&&(this.hasChoropleth=!0),!0===a.visible&&a._length>0&&a._module.calcGeoJSON(r,e)}if(!this.updateProjection(t,e)){this.viewInitial&&this.scope===n.scope||this.saveViewInitial(n),this.scope=n.scope,this.updateBaseLayers(e,n),this.updateDims(e,n),this.updateFx(e,n),c.generalUpdatePerTraceModule(this.graphDiv,this,t,n);var i=this.layers.frontplot.select(".scatterlayer");this.dataPoints.point=i.selectAll(".point"),this.dataPoints.text=i.selectAll("text"),this.dataPaths.line=i.selectAll(".js-line");var s=this.layers.backplot.select(".choroplethlayer");this.dataPaths.choropleth=s.selectAll("path"),this.render()}},j.updateProjection=function(t,e){var n=this.graphDiv,i=e[this.id],s=e._size,l=i.domain,c=i.projection,u=i.lonaxis,p=i.lataxis,h=u._ax,d=p._ax,v=this.projection=function(t){for(var e=t.projection.type,n=o.geo[m.projNames[e]](),r=t._isClipped?m.lonaxisSpan[e]/2:null,a=["center","rotate","parallels","clipExtent"],i=function(t){return t?n:[]},s=0;s<a.length;s++){var l=a[s];"function"!=typeof n[l]&&(n[l]=i)}n.isLonLatOverEdges=function(t){if(null===n(t))return!0;if(r){var e=n.rotate();return o.geo.distance(t,[-e[0],-e[1]])>r*Math.PI/180}return!1},n.getPath=function(){return o.geo.path().projection(n)},n.getBounds=function(t){return n.getPath().bounds(t)},n.fitExtent=function(t,e){var o=t[1][0]-t[0][0],r=t[1][1]-t[0][1],a=n.clipExtent&&n.clipExtent();n.scale(150).translate([0,0]),a&&n.clipExtent(null);var i=n.getBounds(e),s=Math.min(o/(i[1][0]-i[0][0]),r/(i[1][1]-i[0][1])),l=+t[0][0]+(o-s*(i[1][0]+i[0][0]))/2,c=+t[0][1]+(r-s*(i[1][1]+i[0][1]))/2;return a&&n.clipExtent(a),n.scale(150*s).translate([l,c])},n.precision(m.precision),r&&n.clipAngle(r-m.clipPad);return n}(i),g=[[s.l+s.w*l.x[0],s.t+s.h*(1-l.y[1])],[s.l+s.w*l.x[1],s.t+s.h*(1-l.y[0])]],y=i.center||{},b=c.rotation||{},x=u.range||[],w=p.range||[];if(i.fitbounds){h._length=g[1][0]-g[0][0],d._length=g[1][1]-g[0][1],h.range=f(n,h),d.range=f(n,d);var j=(h.range[0]+h.range[1])/2,k=(d.range[0]+d.range[1])/2;if(i._isScoped)y={lon:j,lat:k};else if(i._isClipped){y={lon:j,lat:k},b={lon:j,lat:k,roll:b.roll};var S=c.type,P=m.lonaxisSpan[S]/2||180,T=m.lataxisSpan[S]/2||180;x=[j-P,j+P],w=[k-T,k+T]}else y={lon:j,lat:k},b={lon:j,lat:b.lat,roll:b.roll}}v.center([y.lon-b.lon,y.lat-b.lat]).rotate([-b.lon,-b.lat,b.roll]).parallels(c.parallels);var _=M(x,w);v.fitExtent(g,_);var E=this.bounds=v.getBounds(_),R=this.fitScale=v.scale(),A=v.translate();if(!isFinite(E[0][0])||!isFinite(E[0][1])||!isFinite(E[1][0])||!isFinite(E[1][1])||isNaN(A[0])||isNaN(A[0])){for(var C=["fitbounds","projection.rotation","center","lonaxis.range","lataxis.range"],L="Invalid geo settings, relayout'ing to default view.",F={},D=0;D<C.length;D++)F[this.id+"."+C[D]]=null;return this.viewInitial=null,a.warn(L),n._promises.push(r.call("relayout",n,F)),L}if(i.fitbounds){var z=v.getBounds(M(h.range,d.range)),q=Math.min((E[1][0]-E[0][0])/(z[1][0]-z[0][0]),(E[1][1]-E[0][1])/(z[1][1]-z[0][1]));isFinite(q)?v.scale(q*R):a.warn("Something went wrong during"+this.id+"fitbounds computations.")}else v.scale(c.scale*R);var N=this.midPt=[(E[0][0]+E[1][0])/2,(E[0][1]+E[1][1])/2];if(v.translate([A[0]+(N[0]-A[0]),A[1]+(N[1]-A[1])]).clipExtent(E),i._isAlbersUsa){var I=v([y.lon,y.lat]),G=v.translate();v.translate([G[0]-(I[0]-G[0]),G[1]-(I[1]-G[1])])}},j.updateBaseLayers=function(t,e){var n=this,r=n.topojson,a=n.layers,l=n.basePaths;function c(t){return"lonaxis"===t||"lataxis"===t}function f(t){return Boolean(m.lineLayers[t])}function p(t){return Boolean(m.fillLayers[t])}var h=(this.hasChoropleth?m.layersForChoropleth:m.layers).filter((function(t){return f(t)||p(t)?e["show"+t]:!c(t)||e[t].showgrid})),d=n.framework.selectAll(".layer").data(h,String);d.exit().each((function(t){delete a[t],delete l[t],o.select(this).remove()})),d.enter().append("g").attr("class",(function(t){return"layer "+t})).each((function(t){var e=a[t]=o.select(this);"bg"===t?n.bgRect=e.append("rect").style("pointer-events","all"):c(t)?l[t]=e.append("path").style("fill","none"):"backplot"===t?e.append("g").classed("choroplethlayer",!0):"frontplot"===t?e.append("g").classed("scatterlayer",!0):f(t)?l[t]=e.append("path").style("fill","none").style("stroke-miterlimit",2):p(t)&&(l[t]=e.append("path").style("stroke","none"))})),d.order(),d.each((function(n){var o=l[n],a=m.layerNameToAdjective[n];"frame"===n?o.datum(m.sphereSVG):f(n)||p(n)?o.datum(x(r,r.objects[n])):c(n)&&o.datum(function(t,e,n){var o,r,a,i=e[t],s=m.scopeDefaults[e.scope];"lonaxis"===t?(o=s.lonaxisRange,r=s.lataxisRange,a=function(t,e){return[t,e]}):"lataxis"===t&&(o=s.lataxisRange,r=s.lonaxisRange,a=function(t,e){return[e,t]});var l={type:"linear",range:[o[0],o[1]-1e-6],tick0:i.tick0,dtick:i.dtick};u.setConvert(l,n);var c=u.calcTicks(l);e.isScoped||"lonaxis"!==t||c.pop();for(var f=c.length,p=new Array(f),h=0;h<f;h++)for(var d=c[h].x,v=p[h]=[],g=r[0];g<r[1]+2.5;g+=2.5)v.push(a(d,g));return{type:"MultiLineString",coordinates:p}}(n,e,t)).call(i.stroke,e[n].gridcolor).call(s.dashLine,"",e[n].gridwidth),f(n)?o.call(i.stroke,e[a+"color"]).call(s.dashLine,"",e[a+"width"]):p(n)&&o.call(i.fill,e[a+"color"])}))},j.updateDims=function(t,e){var n=this.bounds,o=(e.framewidth||0)/2,r=n[0][0]-o,a=n[0][1]-o,l=n[1][0]-r+o,c=n[1][1]-a+o;s.setRect(this.clipRect,r,a,l,c),this.bgRect.call(s.setRect,r,a,l,c).call(i.fill,e.bgcolor),this.xaxis._offset=r,this.xaxis._length=l,this.yaxis._offset=a,this.yaxis._length=c},j.updateFx=function(t,e){var n=this,a=n.graphDiv,i=n.bgRect,s=t.dragmode,c=t.clickmode;if(!n.isStatic){var u;"select"===s?u=function(t,e){(t.range={})[n.id]=[m([e.xmin,e.ymin]),m([e.xmax,e.ymax])]}:"lasso"===s&&(u=function(t,e,o){(t.lassoPoints={})[n.id]=o.filtered.map(m)});var f={element:n.bgRect.node(),gd:a,plotinfo:{id:n.id,xaxis:n.xaxis,yaxis:n.yaxis,fillRangeItems:u},xaxes:[n.xaxis],yaxes:[n.yaxis],subplot:n.id,clickFn:function(t){2===t&&d(a)}};"pan"===s?(i.node().onmousedown=null,i.call(g(n,e)),i.on("dblclick.zoom",(function(){var t=n.viewInitial,e={};for(var o in t)e[n.id+"."+o]=t[o];r.call("_guiRelayout",a,e),a.emit("plotly_doubleclick",null)})),a._context._scrollZoom.geo||i.on("wheel.zoom",null)):"select"!==s&&"lasso"!==s||(i.on(".zoom",null),f.prepFn=function(t,e,n){h(t,e,n,f,s)},p.init(f)),i.on("mousemove",(function(){var t=n.projection.invert(o.mouse(this));if(!t||isNaN(t[0])||isNaN(t[1]))return p.unhover(a,o.event);n.xaxis.p2c=function(){return t[0]},n.yaxis.p2c=function(){return t[1]},l.hover(a,o.event,n.id)})),i.on("mouseout",(function(){a._dragging||p.unhover(a,o.event)})),i.on("click",(function(){"select"!==s&&"lasso"!==s&&(c.indexOf("select")>-1&&v(o.event,a,[n.xaxis],[n.yaxis],n.id,f),c.indexOf("event")>-1&&l.click(a,o.event))}))}function m(t){return n.projection.invert([t[0]+n.xaxis._offset,t[1]+n.yaxis._offset])}},j.makeFramework=function(){var t=this,e=t.graphDiv,n=e._fullLayout,r="clip"+n._uid+t.id;t.clipDef=n._clips.append("clipPath").attr("id",r),t.clipRect=t.clipDef.append("rect"),t.framework=o.select(t.container).append("g").attr("class","geo "+t.id).call(s.setClipUrl,r,e),t.project=function(e){var n=t.projection(e);return n?[n[0]-t.xaxis._offset,n[1]-t.yaxis._offset]:[null,null]},t.xaxis={_id:"x",c2p:function(e){return t.project(e)[0]}},t.yaxis={_id:"y",c2p:function(e){return t.project(e)[1]}},t.mockAxis={type:"linear",showexponent:"all",exponentformat:"B"},u.setConvert(t.mockAxis,n)},j.saveViewInitial=function(t){var e,n=t.center||{},o=t.projection,r=o.rotation||{};this.viewInitial={fitbounds:t.fitbounds,"projection.scale":o.scale},e=t._isScoped?{"center.lon":n.lon,"center.lat":n.lat}:t._isClipped?{"projection.rotation.lon":r.lon,"projection.rotation.lat":r.lat}:{"center.lon":n.lon,"center.lat":n.lat,"projection.rotation.lon":r.lon},a.extendFlat(this.viewInitial,e)},j.render=function(){var t,e=this.projection,n=e.getPath();function o(t){var n=e(t.lonlat);return n?"translate("+n[0]+","+n[1]+")":null}function r(t){return e.isLonLatOverEdges(t.lonlat)?"none":null}for(t in this.basePaths)this.basePaths[t].attr("d",n);for(t in this.dataPaths)this.dataPaths[t].attr("d",(function(t){return n(t.geojson)}));for(t in this.dataPoints)this.dataPoints[t].attr("display",r).attr("transform",o)}},1340:function(t,e,n){"use strict";var o=n(24),r=n(3),a=n(15),i=Math.PI/180,s=180/Math.PI,l={cursor:"pointer"},c={cursor:"auto"};function u(t,e){return o.behavior.zoom().translate(e.translate()).scale(e.scale())}function f(t,e,n){var o=t.id,i=t.graphDiv,s=i.layout,l=s[o],c=i._fullLayout,u=c[o],f={},p={};function h(t,e){f[o+"."+t]=r.nestedProperty(l,t).get(),a.call("_storeDirectGUIEdit",s,c._preGUI,f);var n=r.nestedProperty(u,t);n.get()!==e&&(n.set(e),r.nestedProperty(l,t).set(e),p[o+"."+t]=e)}n(h),h("projection.scale",e.scale()/t.fitScale),h("fitbounds",!1),i.emit("plotly_relayout",p)}function p(t,e){var n=u(0,e);function r(n){var o=e.invert(t.midPt);n("center.lon",o[0]),n("center.lat",o[1])}return n.on("zoomstart",(function(){o.select(this).style(l)})).on("zoom",(function(){e.scale(o.event.scale).translate(o.event.translate),t.render();var n=e.invert(t.midPt);t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.center.lon":n[0],"geo.center.lat":n[1]})})).on("zoomend",(function(){o.select(this).style(c),f(t,e,r)})),n}function h(t,e){var n,r,a,i,s,p,h,d,v,g=u(0,e);function m(t){return e.invert(t)}function y(n){var o=e.rotate(),r=e.invert(t.midPt);n("projection.rotation.lon",-o[0]),n("center.lon",r[0]),n("center.lat",r[1])}return g.on("zoomstart",(function(){o.select(this).style(l),n=o.mouse(this),r=e.rotate(),a=e.translate(),i=r,s=m(n)})).on("zoom",(function(){if(p=o.mouse(this),function(t){var n=m(t);if(!n)return!0;var o=e(n);return Math.abs(o[0]-t[0])>2||Math.abs(o[1]-t[1])>2}(n))return g.scale(e.scale()),void g.translate(e.translate());e.scale(o.event.scale),e.translate([a[0],o.event.translate[1]]),s?m(p)&&(d=m(p),h=[i[0]+(d[0]-s[0]),r[1],r[2]],e.rotate(h),i=h):s=m(n=p),v=!0,t.render();var l=e.rotate(),c=e.invert(t.midPt);t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.center.lon":c[0],"geo.center.lat":c[1],"geo.projection.rotation.lon":-l[0]})})).on("zoomend",(function(){o.select(this).style(c),v&&f(t,e,y)})),g}function d(t,e){var n,r={r:e.rotate(),k:e.scale()},a=u(0,e),i=function(t){var e=0,n=arguments.length,r=[];for(;++e<n;)r.push(arguments[e]);var a=o.dispatch.apply(null,r);return a.of=function(e,n){return function(r){var i;try{i=r.sourceEvent=o.event,r.target=t,o.event=r,a[r.type].apply(e,n)}finally{o.event=i}}},a}(a,"zoomstart","zoom","zoomend"),s=0,p=a.on;function h(t){s++||t({type:"zoomstart"})}function d(t){t({type:"zoom"})}function x(t){--s||t({type:"zoomend"})}function w(t){var n=e.rotate();t("projection.rotation.lon",-n[0]),t("projection.rotation.lat",-n[1])}return a.on("zoomstart",(function(){o.select(this).style(l);var t=o.mouse(this),s=e.rotate(),c=s,u=e.translate(),f=g(s);n=v(e,t),p.call(a,"zoom",(function(){var a=o.mouse(this);if(e.scale(r.k=o.event.scale),n){if(v(e,a)){e.rotate(s).translate(u);var l=v(e,a),p=y(n,l),h=M(m(f,p)),g=r.r=b(h,n,c);isFinite(g[0])&&isFinite(g[1])&&isFinite(g[2])||(g=c),e.rotate(g),c=g}}else n=v(e,t=a);d(i.of(this,arguments))})),h(i.of(this,arguments))})).on("zoomend",(function(){o.select(this).style(c),p.call(a,"zoom",null),x(i.of(this,arguments)),f(t,e,w)})).on("zoom.redraw",(function(){t.render();var n=e.rotate();t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.projection.rotation.lon":-n[0],"geo.projection.rotation.lat":-n[1]})})),o.rebind(a,i,"on")}function v(t,e){var n=t.invert(e);return n&&isFinite(n[0])&&isFinite(n[1])&&function(t){var e=t[0]*i,n=t[1]*i,o=Math.cos(n);return[o*Math.cos(e),o*Math.sin(e),Math.sin(n)]}(n)}function g(t){var e=.5*t[0]*i,n=.5*t[1]*i,o=.5*t[2]*i,r=Math.sin(e),a=Math.cos(e),s=Math.sin(n),l=Math.cos(n),c=Math.sin(o),u=Math.cos(o);return[a*l*u+r*s*c,r*l*u-a*s*c,a*s*u+r*l*c,a*l*c-r*s*u]}function m(t,e){var n=t[0],o=t[1],r=t[2],a=t[3],i=e[0],s=e[1],l=e[2],c=e[3];return[n*i-o*s-r*l-a*c,n*s+o*i+r*c-a*l,n*l-o*c+r*i+a*s,n*c+o*l-r*s+a*i]}function y(t,e){if(t&&e){var n=function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}(t,e),o=Math.sqrt(k(n,n)),r=.5*Math.acos(Math.max(-1,Math.min(1,k(t,e)))),a=Math.sin(r)/o;return o&&[Math.cos(r),n[2]*a,-n[1]*a,n[0]*a]}}function b(t,e,n){var o=j(e,2,t[0]);o=j(o,1,t[1]),o=j(o,0,t[2]-n[2]);var r,a,i=e[0],l=e[1],c=e[2],u=o[0],f=o[1],p=o[2],h=Math.atan2(l,i)*s,d=Math.sqrt(i*i+l*l);Math.abs(f)>d?(a=(f>0?90:-90)-h,r=0):(a=Math.asin(f/d)*s-h,r=Math.sqrt(d*d-f*f));var v=180-a-2*h,g=(Math.atan2(p,u)-Math.atan2(c,r))*s,m=(Math.atan2(p,u)-Math.atan2(c,-r))*s;return x(n[0],n[1],a,g)<=x(n[0],n[1],v,m)?[a,g,n[2]]:[v,m,n[2]]}function x(t,e,n,o){var r=w(n-t),a=w(o-e);return Math.sqrt(r*r+a*a)}function w(t){return(t%360+540)%360-180}function j(t,e,n){var o=n*i,r=t.slice(),a=0===e?1:0,s=2===e?1:2,l=Math.cos(o),c=Math.sin(o);return r[a]=t[a]*l-t[s]*c,r[s]=t[s]*l+t[a]*c,r}function M(t){return[Math.atan2(2*(t[0]*t[1]+t[2]*t[3]),1-2*(t[1]*t[1]+t[2]*t[2]))*s,Math.asin(Math.max(-1,Math.min(1,2*(t[0]*t[2]-t[3]*t[1]))))*s,Math.atan2(2*(t[0]*t[3]+t[1]*t[2]),1-2*(t[2]*t[2]+t[3]*t[3]))*s]}function k(t,e){for(var n=0,o=0,r=t.length;o<r;++o)n+=t[o]*e[o];return n}t.exports=function(t,e){var n=t.projection;return(e._isScoped?p:e._isClipped?d:h)(t,n)}},1341:function(t,e,n){"use strict";t.exports=function(t){function e(t,e){return{type:"Feature",id:t.id,properties:t.properties,geometry:n(t.geometry,e)}}function n(e,o){if(!e)return null;if("GeometryCollection"===e.type)return{type:"GeometryCollection",geometries:object.geometries.map((function(t){return n(t,o)}))};if(!c.hasOwnProperty(e.type))return null;var r=c[e.type];return t.geo.stream(e,o(r)),r.result()}t.geo.project=function(t,e){var r=e.stream;if(!r)throw new Error("not yet supported");return(t&&o.hasOwnProperty(t.type)?o[t.type]:n)(t,r)};var o={Feature:e,FeatureCollection:function(t,n){return{type:"FeatureCollection",features:t.features.map((function(t){return e(t,n)}))}}},r=[],a=[],i={point:function(t,e){r.push([t,e])},result:function(){var t=r.length?r.length<2?{type:"Point",coordinates:r[0]}:{type:"MultiPoint",coordinates:r}:null;return r=[],t}},s={lineStart:u,point:function(t,e){r.push([t,e])},lineEnd:function(){r.length&&(a.push(r),r=[])},result:function(){var t=a.length?a.length<2?{type:"LineString",coordinates:a[0]}:{type:"MultiLineString",coordinates:a}:null;return a=[],t}},l={polygonStart:u,lineStart:u,point:function(t,e){r.push([t,e])},lineEnd:function(){var t=r.length;if(t){do{r.push(r[0].slice())}while(++t<4);a.push(r),r=[]}},polygonEnd:u,result:function(){if(!a.length)return null;var t=[],e=[];return a.forEach((function(n){!function(t){if((e=t.length)<4)return!1;var e,n=0,o=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];for(;++n<e;)o+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return o<=0}(n)?e.push(n):t.push([n])})),e.forEach((function(e){var n=e[0];t.some((function(t){if(function(t,e){for(var n=e[0],o=e[1],r=!1,a=0,i=t.length,s=i-1;a<i;s=a++){var l=t[a],c=l[0],u=l[1],f=t[s],p=f[0],h=f[1];u>o^h>o&&n<(p-c)*(o-u)/(h-u)+c&&(r=!r)}return r}(t[0],n))return t.push(e),!0}))||t.push([e])})),a=[],t.length?t.length>1?{type:"MultiPolygon",coordinates:t}:{type:"Polygon",coordinates:t[0]}:null}},c={Point:i,MultiPoint:i,LineString:s,MultiLineString:s,Polygon:l,MultiPolygon:l,Sphere:l};function u(){}var f=1e-6,p=Math.PI,h=p/2,d=(Math.sqrt(p),p/180),v=180/p;function g(t){return t>1?h:t<-1?-h:Math.asin(t)}function m(t){return t>1?0:t<-1?p:Math.acos(t)}var y=t.geo.projection,b=t.geo.projectionMutator;function x(t,e){var n=(2+h)*Math.sin(e);e/=2;for(var o=0,r=1/0;o<10&&Math.abs(r)>f;o++){var a=Math.cos(e);e-=r=(e+Math.sin(e)*(a+2)-n)/(2*a*(1+a))}return[2/Math.sqrt(p*(4+p))*t*(1+Math.cos(e)),2*Math.sqrt(p/(4+p))*Math.sin(e)]}t.geo.interrupt=function(e){var n,o=[[[[-p,0],[0,h],[p,0]]],[[[-p,0],[0,-h],[p,0]]]];function r(t,n){for(var r=n<0?-1:1,a=o[+(n<0)],i=0,s=a.length-1;i<s&&t>a[i][2][0];++i);var l=e(t-a[i][1][0],n);return l[0]+=e(a[i][1][0],r*n>r*a[i][0][1]?a[i][0][1]:n)[0],l}function a(){n=o.map((function(t){return t.map((function(t){var n,o=e(t[0][0],t[0][1])[0],r=e(t[2][0],t[2][1])[0],a=e(t[1][0],t[0][1])[1],i=e(t[1][0],t[1][1])[1];return a>i&&(n=a,a=i,i=n),[[o,a],[r,i]]}))}))}e.invert&&(r.invert=function(t,a){for(var i=n[+(a<0)],s=o[+(a<0)],l=0,u=i.length;l<u;++l){var f=i[l];if(f[0][0]<=t&&t<f[1][0]&&f[0][1]<=a&&a<f[1][1]){var p=e.invert(t-e(s[l][1][0],0)[0],a);return p[0]+=s[l][1][0],c(r(p[0],p[1]),[t,a])?p:null}}});var i=t.geo.projection(r),s=i.stream;function l(t,e){for(var n,o,r,a=-1,i=t.length,s=t[0],l=[];++a<i;){o=((n=t[a])[0]-s[0])/e,r=(n[1]-s[1])/e;for(var c=0;c<e;++c)l.push([s[0]+c*o,s[1]+c*r]);s=n}return l.push(n),l}function c(t,e){return Math.abs(t[0]-e[0])<f&&Math.abs(t[1]-e[1])<f}return i.stream=function(e){var n=i.rotate(),r=s(e),a=(i.rotate([0,0]),s(e));return i.rotate(n),r.sphere=function(){t.geo.stream(function(){for(var e=1e-6,n=[],r=0,a=o[0].length;r<a;++r){var i=180*(h=o[0][r])[0][0]/p,s=180*h[0][1]/p,c=180*h[1][1]/p,u=180*h[2][0]/p,f=180*h[2][1]/p;n.push(l([[i+e,s+e],[i+e,c-e],[u-e,c-e],[u-e,f+e]],30))}for(r=o[1].length-1;r>=0;--r){var h;i=180*(h=o[1][r])[0][0]/p,s=180*h[0][1]/p,c=180*h[1][1]/p,u=180*h[2][0]/p,f=180*h[2][1]/p;n.push(l([[u-e,f-e],[u-e,c+e],[i+e,c+e],[i+e,s-e]],30))}return{type:"Polygon",coordinates:[t.merge(n)]}}(),a)},r},i.lobes=function(t){return arguments.length?(o=t.map((function(t){return t.map((function(t){return[[t[0][0]*p/180,t[0][1]*p/180],[t[1][0]*p/180,t[1][1]*p/180],[t[2][0]*p/180,t[2][1]*p/180]]}))})),a(),i):o.map((function(t){return t.map((function(t){return[[180*t[0][0]/p,180*t[0][1]/p],[180*t[1][0]/p,180*t[1][1]/p],[180*t[2][0]/p,180*t[2][1]/p]]}))}))},i},x.invert=function(t,e){var n=.5*e*Math.sqrt((4+p)/p),o=g(n),r=Math.cos(o);return[t/(2/Math.sqrt(p*(4+p))*(1+r)),g((o+n*(r+2))/(2+h))]},(t.geo.eckert4=function(){return y(x)}).raw=x;var w=t.geo.azimuthalEqualArea.raw;function j(t,e){if(arguments.length<2&&(e=t),1===e)return w;if(e===1/0)return M;function n(n,o){var r=w(n/e,o);return r[0]*=t,r}return n.invert=function(n,o){var r=w.invert(n/t,o);return r[0]*=e,r},n}function M(t,e){return[t*Math.cos(e)/Math.cos(e/=2),2*Math.sin(e)]}function k(t,e){return[3*t/(2*p)*Math.sqrt(p*p/3-e*e),e]}function S(t,e){return[t,1.25*Math.log(Math.tan(p/4+.4*e))]}function P(t){return function(e){var n,o=t*Math.sin(e),r=30;do{e-=n=(e+Math.sin(e)-o)/(1+Math.cos(e))}while(Math.abs(n)>f&&--r>0);return e/2}}M.invert=function(t,e){var n=2*g(e/2);return[t*Math.cos(n/2)/Math.cos(n),n]},(t.geo.hammer=function(){var t=2,e=b(j),n=e(t);return n.coefficient=function(n){return arguments.length?e(t=+n):t},n}).raw=j,k.invert=function(t,e){return[2/3*p*t/Math.sqrt(p*p/3-e*e),e]},(t.geo.kavrayskiy7=function(){return y(k)}).raw=k,S.invert=function(t,e){return[t,2.5*Math.atan(Math.exp(.8*e))-.625*p]},(t.geo.miller=function(){return y(S)}).raw=S,P(p);var T=function(t,e,n){var o=P(n);function r(n,r){return[t*n*Math.cos(r=o(r)),e*Math.sin(r)]}return r.invert=function(o,r){var a=g(r/e);return[o/(t*Math.cos(a)),g((2*a+Math.sin(2*a))/n)]},r}(Math.SQRT2/h,Math.SQRT2,p);function _(t,e){var n=e*e,o=n*n;return[t*(.8707-.131979*n+o*(o*(.003971*n-.001529*o)-.013791)),e*(1.007226+n*(.015085+o*(.028874*n-.044475-.005916*o)))]}(t.geo.mollweide=function(){return y(T)}).raw=T,_.invert=function(t,e){var n,o=e,r=25;do{var a=o*o,i=a*a;o-=n=(o*(1.007226+a*(.015085+i*(.028874*a-.044475-.005916*i)))-e)/(1.007226+a*(.045255+i*(.259866*a-.311325-.005916*11*i)))}while(Math.abs(n)>f&&--r>0);return[t/(.8707+(a=o*o)*(a*(a*a*a*(.003971-.001529*a)-.013791)-.131979)),o]},(t.geo.naturalEarth=function(){return y(_)}).raw=_;var E=[[.9986,-.062],[1,0],[.9986,.062],[.9954,.124],[.99,.186],[.9822,.248],[.973,.31],[.96,.372],[.9427,.434],[.9216,.4958],[.8962,.5571],[.8679,.6176],[.835,.6769],[.7986,.7346],[.7597,.7903],[.7186,.8435],[.6732,.8936],[.6213,.9394],[.5722,.9761],[.5322,1]];function R(t,e){var n,o=Math.min(18,36*Math.abs(e)/p),r=Math.floor(o),a=o-r,i=(n=E[r])[0],s=n[1],l=(n=E[++r])[0],c=n[1],u=(n=E[Math.min(19,++r)])[0],f=n[1];return[t*(l+a*(u-i)/2+a*a*(u-2*l+i)/2),(e>0?h:-h)*(c+a*(f-s)/2+a*a*(f-2*c+s)/2)]}function A(t,e){return[t*Math.cos(e),e]}function C(t,e){var n,o=Math.cos(e),r=(n=m(o*Math.cos(t/=2)))?n/Math.sin(n):1;return[2*o*Math.sin(t)*r,Math.sin(e)*r]}function L(t,e){var n=C(t,e);return[(n[0]+t/h)/2,(n[1]+e)/2]}E.forEach((function(t){t[1]*=1.0144})),R.invert=function(t,e){var n=e/h,o=90*n,r=Math.min(18,Math.abs(o/5)),a=Math.max(0,Math.floor(r));do{var i=E[a][1],s=E[a+1][1],l=E[Math.min(19,a+2)][1],c=l-i,u=l-2*s+i,f=2*(Math.abs(n)-s)/c,p=u/c,g=f*(1-p*f*(1-2*p*f));if(g>=0||1===a){o=(e>=0?5:-5)*(g+r);var m,y=50;do{g=(r=Math.min(18,Math.abs(o)/5))-(a=Math.floor(r)),i=E[a][1],s=E[a+1][1],l=E[Math.min(19,a+2)][1],o-=(m=(e>=0?h:-h)*(s+g*(l-i)/2+g*g*(l-2*s+i)/2)-e)*v}while(Math.abs(m)>1e-12&&--y>0);break}}while(--a>=0);var b=E[a][0],x=E[a+1][0],w=E[Math.min(19,a+2)][0];return[t/(x+g*(w-b)/2+g*g*(w-2*x+b)/2),o*d]},(t.geo.robinson=function(){return y(R)}).raw=R,A.invert=function(t,e){return[t/Math.cos(e),e]},(t.geo.sinusoidal=function(){return y(A)}).raw=A,C.invert=function(t,e){if(!(t*t+4*e*e>p*p+f)){var n=t,o=e,r=25;do{var a,i=Math.sin(n),s=Math.sin(n/2),l=Math.cos(n/2),c=Math.sin(o),u=Math.cos(o),h=Math.sin(2*o),d=c*c,v=u*u,g=s*s,y=1-v*l*l,b=y?m(u*l)*Math.sqrt(a=1/y):a=0,x=2*b*u*s-t,w=b*c-e,j=a*(v*g+b*u*l*d),M=a*(.5*i*h-2*b*c*s),k=.25*a*(h*s-b*c*v*i),S=a*(d*l+b*g*u),P=M*k-S*j;if(!P)break;var T=(w*M-x*S)/P,_=(x*k-w*j)/P;n-=T,o-=_}while((Math.abs(T)>f||Math.abs(_)>f)&&--r>0);return[n,o]}},(t.geo.aitoff=function(){return y(C)}).raw=C,L.invert=function(t,e){var n=t,o=e,r=25;do{var a,i=Math.cos(o),s=Math.sin(o),l=Math.sin(2*o),c=s*s,u=i*i,p=Math.sin(n),d=Math.cos(n/2),v=Math.sin(n/2),g=v*v,y=1-u*d*d,b=y?m(i*d)*Math.sqrt(a=1/y):a=0,x=.5*(2*b*i*v+n/h)-t,w=.5*(b*s+o)-e,j=.5*a*(u*g+b*i*d*c)+.5/h,M=a*(p*l/4-b*s*v),k=.125*a*(l*v-b*s*u*p),S=.5*a*(c*d+b*g*i)+.5,P=M*k-S*j,T=(w*M-x*S)/P,_=(x*k-w*j)/P;n-=T,o-=_}while((Math.abs(T)>f||Math.abs(_)>f)&&--r>0);return[n,o]},(t.geo.winkel3=function(){return y(L)}).raw=L}},1342:function(t,e,n){"use strict";var o=n(3),r=n(751),a=n(222).getSubplotData,i=n(937),s=n(1216),l=i.axesNames;function c(t,e,n,r){var s=a(r.fullData,"geo",r.id).map((function(t){return t._expandedIndex})),c=n("resolution"),u=n("scope"),f=i.scopeDefaults[u],p=n("projection.type",f.projType),h=e._isAlbersUsa="albers usa"===p;h&&(u=e.scope="usa");var d=e._isScoped="world"!==u,v=e._isConic=-1!==p.indexOf("conic"),g=e._isClipped=!!i.lonaxisSpan[p];if(!1===t.visible){var m=o.extendDeep({},e._template);m.showcoastlines=!1,m.showcountries=!1,m.showframe=!1,m.showlakes=!1,m.showland=!1,m.showocean=!1,m.showrivers=!1,m.showsubunits=!1,m.lonaxis&&(m.lonaxis.showgrid=!1),m.lataxis&&(m.lataxis.showgrid=!1),e._template=m}for(var y=n("visible"),b=0;b<l.length;b++){var x,w=l[b],j=[30,10][b];if(d)x=f[w+"Range"];else{var M=i[w+"Span"],k=(M[p]||M["*"])/2,S=n("projection.rotation."+w.substr(0,3),f.projRotate[b]);x=[S-k,S+k]}var P=n(w+".range",x);n(w+".tick0"),n(w+".dtick",j),n(w+".showgrid",!!y&&void 0)&&(n(w+".gridcolor"),n(w+".gridwidth")),e[w]._ax={type:"linear",_id:w.slice(0,3),_traceIndices:s,setScale:o.identity,c2l:o.identity,r2l:o.identity,autorange:!0,range:P.slice(),_m:1,_input:{}}}var T=e.lonaxis.range,_=e.lataxis.range,E=T[0],R=T[1];E>0&&R<0&&(R+=360);var A,C,L,F=(E+R)/2;if(!h){var D=d?f.projRotate:[F,0,0];A=n("projection.rotation.lon",D[0]),n("projection.rotation.lat",D[1]),n("projection.rotation.roll",D[2]),n("showcoastlines",!d&&y)&&(n("coastlinecolor"),n("coastlinewidth")),n("showocean",!!y&&void 0)&&n("oceancolor")}(h?(C=-96.6,L=38.7):(C=d?F:A,L=(_[0]+_[1])/2),n("center.lon",C),n("center.lat",L),v)&&n("projection.parallels",f.projParallels||[0,60]);n("projection.scale"),n("showland",!!y&&void 0)&&n("landcolor"),n("showlakes",!!y&&void 0)&&n("lakecolor"),n("showrivers",!!y&&void 0)&&(n("rivercolor"),n("riverwidth")),n("showcountries",d&&"usa"!==u&&y)&&(n("countrycolor"),n("countrywidth")),("usa"===u||"north america"===u&&50===c)&&(n("showsubunits",y),n("subunitcolor"),n("subunitwidth")),d||n("showframe",y)&&(n("framecolor"),n("framewidth")),n("bgcolor"),n("fitbounds")&&(delete e.projection.scale,d?(delete e.center.lon,delete e.center.lat):g?(delete e.center.lon,delete e.center.lat,delete e.projection.rotation.lon,delete e.projection.rotation.lat,delete e.lonaxis.range,delete e.lataxis.range):(delete e.center.lon,delete e.center.lat,delete e.projection.rotation.lon))}t.exports=function(t,e,n){r(t,e,n,{type:"geo",attributes:s,handleDefaults:c,fullData:n,partition:"y"})}},652:function(t,e,n){"use strict";var o=n(3);t.exports=function(t,e){for(var n=0;n<t.length;n++)t[n].i=n;o.mergeArray(e.text,t,"tx"),o.mergeArray(e.texttemplate,t,"txt"),o.mergeArray(e.hovertext,t,"htx"),o.mergeArray(e.customdata,t,"data"),o.mergeArray(e.textposition,t,"tp"),e.textfont&&(o.mergeArrayCastPositive(e.textfont.size,t,"ts"),o.mergeArray(e.textfont.color,t,"tc"),o.mergeArray(e.textfont.family,t,"tf"));var r=e.marker;if(r){o.mergeArrayCastPositive(r.size,t,"ms"),o.mergeArrayCastPositive(r.opacity,t,"mo"),o.mergeArray(r.symbol,t,"mx"),o.mergeArray(r.color,t,"mc");var a=r.line;r.line&&(o.mergeArray(a.color,t,"mlc"),o.mergeArrayCastPositive(a.width,t,"mlw"));var i=r.gradient;i&&"none"!==i.type&&(o.mergeArray(i.type,t,"mgt"),o.mergeArray(i.color,t,"mgc"))}}},654:function(t,e,n){"use strict";var o=n(3);t.exports=function(t,e){o.isArrayOrTypedArray(e.selectedpoints)&&o.tagSelected(t,e)}},937:function(t,e,n){"use strict";e.projNames={equirectangular:"equirectangular",mercator:"mercator",orthographic:"orthographic","natural earth":"naturalEarth",kavrayskiy7:"kavrayskiy7",miller:"miller",robinson:"robinson",eckert4:"eckert4","azimuthal equal area":"azimuthalEqualArea","azimuthal equidistant":"azimuthalEquidistant","conic equal area":"conicEqualArea","conic conformal":"conicConformal","conic equidistant":"conicEquidistant",gnomonic:"gnomonic",stereographic:"stereographic",mollweide:"mollweide",hammer:"hammer","transverse mercator":"transverseMercator","albers usa":"albersUsa","winkel tripel":"winkel3",aitoff:"aitoff",sinusoidal:"sinusoidal"},e.axesNames=["lonaxis","lataxis"],e.lonaxisSpan={orthographic:180,"azimuthal equal area":360,"azimuthal equidistant":360,"conic conformal":180,gnomonic:160,stereographic:180,"transverse mercator":180,"*":360},e.lataxisSpan={"conic conformal":150,stereographic:179.5,"*":180},e.scopeDefaults={world:{lonaxisRange:[-180,180],lataxisRange:[-90,90],projType:"equirectangular",projRotate:[0,0,0]},usa:{lonaxisRange:[-180,-50],lataxisRange:[15,80],projType:"albers usa"},europe:{lonaxisRange:[-30,60],lataxisRange:[30,85],projType:"conic conformal",projRotate:[15,0,0],projParallels:[0,60]},asia:{lonaxisRange:[22,160],lataxisRange:[-15,55],projType:"mercator",projRotate:[0,0,0]},africa:{lonaxisRange:[-30,60],lataxisRange:[-40,40],projType:"mercator",projRotate:[0,0,0]},"north america":{lonaxisRange:[-180,-45],lataxisRange:[5,85],projType:"conic conformal",projRotate:[-100,0,0],projParallels:[29.5,45.5]},"south america":{lonaxisRange:[-100,-30],lataxisRange:[-60,15],projType:"mercator",projRotate:[0,0,0]}},e.clipPad=.001,e.precision=.1,e.landColor="#F0DC82",e.waterColor="#3399FF",e.locationmodeToLayer={"ISO-3":"countries","USA-states":"subunits","country names":"countries"},e.sphereSVG={type:"Sphere"},e.fillLayers={ocean:1,land:1,lakes:1},e.lineLayers={subunits:1,countries:1,coastlines:1,rivers:1,frame:1},e.layers=["bg","ocean","land","lakes","subunits","countries","coastlines","rivers","lataxis","lonaxis","frame","backplot","frontplot"],e.layersForChoropleth=["bg","ocean","land","subunits","countries","coastlines","lataxis","lonaxis","frame","backplot","rivers","lakes","frontplot"],e.layerNameToAdjective={ocean:"ocean",land:"land",lakes:"lake",subunits:"subunit",countries:"country",coastlines:"coastline",rivers:"river",frame:"frame"}}}]);