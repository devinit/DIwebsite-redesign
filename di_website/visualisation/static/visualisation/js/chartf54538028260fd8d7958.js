(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1052:function(e,t,i){e.exports={EPSILON:i(1053),create:i(1054),clone:i(1251),angle:i(1252),fromValues:i(1055),copy:i(1253),set:i(1254),equals:i(1255),exactEquals:i(1256),add:i(1257),subtract:i(1056),sub:i(1258),multiply:i(1057),mul:i(1259),divide:i(1058),div:i(1260),min:i(1261),max:i(1262),floor:i(1263),ceil:i(1264),round:i(1265),scale:i(1266),scaleAndAdd:i(1267),distance:i(1059),dist:i(1268),squaredDistance:i(1060),sqrDist:i(1269),length:i(882),len:i(1270),squaredLength:i(1061),sqrLen:i(1271),negate:i(1272),inverse:i(1273),normalize:i(693),dot:i(733),cross:i(881),lerp:i(1038),random:i(1274),transformMat4:i(1275),transformMat3:i(1276),transformQuat:i(1277),rotateX:i(1278),rotateY:i(1279),rotateZ:i(1280),forEach:i(1281)}},1053:function(e,t){e.exports=1e-6},1054:function(e,t){e.exports=function(){var e=new Float32Array(3);return e[0]=0,e[1]=0,e[2]=0,e}},1055:function(e,t){e.exports=function(e,t,i){var n=new Float32Array(3);return n[0]=e,n[1]=t,n[2]=i,n}},1056:function(e,t){e.exports=function(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}},1057:function(e,t){e.exports=function(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}},1058:function(e,t){e.exports=function(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e[2]=t[2]/i[2],e}},1059:function(e,t){e.exports=function(e,t){var i=t[0]-e[0],n=t[1]-e[1],r=t[2]-e[2];return Math.sqrt(i*i+n*n+r*r)}},1060:function(e,t){e.exports=function(e,t){var i=t[0]-e[0],n=t[1]-e[1],r=t[2]-e[2];return i*i+n*n+r*r}},1061:function(e,t){e.exports=function(e){var t=e[0],i=e[1],n=e[2];return t*t+i*i+n*n}},1251:function(e,t){e.exports=function(e){var t=new Float32Array(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}},1252:function(e,t,i){e.exports=function(e,t){var i=n(e[0],e[1],e[2]),s=n(t[0],t[1],t[2]);r(i,i),r(s,s);var a=o(i,s);return a>1?0:Math.acos(a)};var n=i(1055),r=i(693),o=i(733)},1253:function(e,t){e.exports=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}},1254:function(e,t){e.exports=function(e,t,i,n){return e[0]=t,e[1]=i,e[2]=n,e}},1255:function(e,t,i){e.exports=function(e,t){var i=e[0],r=e[1],o=e[2],s=t[0],a=t[1],l=t[2];return Math.abs(i-s)<=n*Math.max(1,Math.abs(i),Math.abs(s))&&Math.abs(r-a)<=n*Math.max(1,Math.abs(r),Math.abs(a))&&Math.abs(o-l)<=n*Math.max(1,Math.abs(o),Math.abs(l))};var n=i(1053)},1256:function(e,t){e.exports=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}},1257:function(e,t){e.exports=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}},1258:function(e,t,i){e.exports=i(1056)},1259:function(e,t,i){e.exports=i(1057)},1260:function(e,t,i){e.exports=i(1058)},1261:function(e,t){e.exports=function(e,t,i){return e[0]=Math.min(t[0],i[0]),e[1]=Math.min(t[1],i[1]),e[2]=Math.min(t[2],i[2]),e}},1262:function(e,t){e.exports=function(e,t,i){return e[0]=Math.max(t[0],i[0]),e[1]=Math.max(t[1],i[1]),e[2]=Math.max(t[2],i[2]),e}},1263:function(e,t){e.exports=function(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e}},1264:function(e,t){e.exports=function(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e}},1265:function(e,t){e.exports=function(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e}},1266:function(e,t){e.exports=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}},1267:function(e,t){e.exports=function(e,t,i,n){return e[0]=t[0]+i[0]*n,e[1]=t[1]+i[1]*n,e[2]=t[2]+i[2]*n,e}},1268:function(e,t,i){e.exports=i(1059)},1269:function(e,t,i){e.exports=i(1060)},1270:function(e,t,i){e.exports=i(882)},1271:function(e,t,i){e.exports=i(1061)},1272:function(e,t){e.exports=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}},1273:function(e,t){e.exports=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e}},1274:function(e,t){e.exports=function(e,t){t=t||1;var i=2*Math.random()*Math.PI,n=2*Math.random()-1,r=Math.sqrt(1-n*n)*t;return e[0]=Math.cos(i)*r,e[1]=Math.sin(i)*r,e[2]=n*t,e}},1275:function(e,t){e.exports=function(e,t,i){var n=t[0],r=t[1],o=t[2],s=i[3]*n+i[7]*r+i[11]*o+i[15];return s=s||1,e[0]=(i[0]*n+i[4]*r+i[8]*o+i[12])/s,e[1]=(i[1]*n+i[5]*r+i[9]*o+i[13])/s,e[2]=(i[2]*n+i[6]*r+i[10]*o+i[14])/s,e}},1276:function(e,t){e.exports=function(e,t,i){var n=t[0],r=t[1],o=t[2];return e[0]=n*i[0]+r*i[3]+o*i[6],e[1]=n*i[1]+r*i[4]+o*i[7],e[2]=n*i[2]+r*i[5]+o*i[8],e}},1277:function(e,t){e.exports=function(e,t,i){var n=t[0],r=t[1],o=t[2],s=i[0],a=i[1],l=i[2],c=i[3],h=c*n+a*o-l*r,u=c*r+l*n-s*o,p=c*o+s*r-a*n,d=-s*n-a*r-l*o;return e[0]=h*c+d*-s+u*-l-p*-a,e[1]=u*c+d*-a+p*-s-h*-l,e[2]=p*c+d*-l+h*-a-u*-s,e}},1278:function(e,t){e.exports=function(e,t,i,n){var r=i[1],o=i[2],s=t[1]-r,a=t[2]-o,l=Math.sin(n),c=Math.cos(n);return e[0]=t[0],e[1]=r+s*c-a*l,e[2]=o+s*l+a*c,e}},1279:function(e,t){e.exports=function(e,t,i,n){var r=i[0],o=i[2],s=t[0]-r,a=t[2]-o,l=Math.sin(n),c=Math.cos(n);return e[0]=r+a*l+s*c,e[1]=t[1],e[2]=o+a*c-s*l,e}},1280:function(e,t){e.exports=function(e,t,i,n){var r=i[0],o=i[1],s=t[0]-r,a=t[1]-o,l=Math.sin(n),c=Math.cos(n);return e[0]=r+s*c-a*l,e[1]=o+s*l+a*c,e[2]=t[2],e}},1281:function(e,t,i){e.exports=function(e,t,i,r,o,s){var a,l;t||(t=3);i||(i=0);l=r?Math.min(r*t+i,e.length):e.length;for(a=i;a<l;a+=t)n[0]=e[a],n[1]=e[a+1],n[2]=e[a+2],o(n,n,s),e[a]=n[0],e[a+1]=n[1],e[a+2]=n[2];return e};var n=i(1054)()},1282:function(e,t,i){var n=i(415),r=n("./triangle-vertex.glsl"),o=n("./triangle-fragment.glsl"),s=n("./pick-vertex.glsl"),a=n("./pick-fragment.glsl");t.meshShader={vertex:r,fragment:o,attributes:[{name:"position",type:"vec4"},{name:"color",type:"vec4"},{name:"uv",type:"vec2"},{name:"vector",type:"vec3"}]},t.pickShader={vertex:s,fragment:a,attributes:[{name:"position",type:"vec4"},{name:"id",type:"vec4"},{name:"vector",type:"vec3"}]}},1283:function(e,t,i){"use strict";var n=i(420),r=i(413),o=i(477),s=i(542),a=i(560),l=i(531),c=i(433),h=i(885),u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function p(e,t,i,n,r,o,s,a,l,c,h){this.gl=e,this.pixelRatio=1,this.cells=[],this.positions=[],this.intensity=[],this.texture=t,this.dirty=!0,this.triShader=i,this.pickShader=n,this.trianglePositions=r,this.triangleVectors=o,this.triangleColors=a,this.triangleUVs=l,this.triangleIds=s,this.triangleVAO=c,this.triangleCount=0,this.pickId=1,this.bounds=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]],this.clipBounds=[[-1/0,-1/0,-1/0],[1/0,1/0,1/0]],this.lightPosition=[1e5,1e5,0],this.ambientLight=.8,this.diffuseLight=.8,this.specularLight=2,this.roughness=.5,this.fresnel=1.5,this.opacity=1,this.traceType=h,this.tubeScale=1,this.coneScale=2,this.vectorScale=1,this.coneOffset=.25,this._model=u,this._view=u,this._projection=u,this._resolution=[1,1]}var d=p.prototype;function f(e,t){var i=n(e,t.meshShader.vertex,t.meshShader.fragment,null,t.meshShader.attributes);return i.attributes.position.location=0,i.attributes.color.location=2,i.attributes.uv.location=3,i.attributes.vector.location=4,i}function v(e,t){var i=n(e,t.pickShader.vertex,t.pickShader.fragment,null,t.pickShader.attributes);return i.attributes.position.location=0,i.attributes.id.location=1,i.attributes.vector.location=4,i}d.isOpaque=function(){return this.opacity>=1},d.isTransparent=function(){return this.opacity<1},d.pickSlots=1,d.setPickBase=function(e){this.pickId=e},d.update=function(e){e=e||{};var t=this.gl;this.dirty=!0,"lightPosition"in e&&(this.lightPosition=e.lightPosition),"opacity"in e&&(this.opacity=e.opacity),"ambient"in e&&(this.ambientLight=e.ambient),"diffuse"in e&&(this.diffuseLight=e.diffuse),"specular"in e&&(this.specularLight=e.specular),"roughness"in e&&(this.roughness=e.roughness),"fresnel"in e&&(this.fresnel=e.fresnel),void 0!==e.tubeScale&&(this.tubeScale=e.tubeScale),void 0!==e.vectorScale&&(this.vectorScale=e.vectorScale),void 0!==e.coneScale&&(this.coneScale=e.coneScale),void 0!==e.coneOffset&&(this.coneOffset=e.coneOffset),e.colormap&&(this.texture.shape=[256,256],this.texture.minFilter=t.LINEAR_MIPMAP_LINEAR,this.texture.magFilter=t.LINEAR,this.texture.setPixels(function(e){for(var t=h({colormap:e,nshades:256,format:"rgba"}),i=new Uint8Array(1024),n=0;n<256;++n){for(var r=t[n],o=0;o<3;++o)i[4*n+o]=r[o];i[4*n+3]=255*r[3]}return c(i,[256,256,4],[4,0,1])}(e.colormap)),this.texture.generateMipmap());var i=e.cells,n=e.positions,r=e.vectors;if(n&&i&&r){var o=[],s=[],a=[],l=[],u=[];this.cells=i,this.positions=n,this.vectors=r;var p=e.meshColor||[1,1,1,1],d=e.vertexIntensity,f=1/0,v=-1/0;if(d)if(e.vertexIntensityBounds)f=+e.vertexIntensityBounds[0],v=+e.vertexIntensityBounds[1];else for(var m=0;m<d.length;++m){var y=d[m];f=Math.min(f,y),v=Math.max(v,y)}else for(m=0;m<n.length;++m){y=n[m][2];f=Math.min(f,y),v=Math.max(v,y)}this.intensity=d||function(e){for(var t=e.length,i=new Array(t),n=0;n<t;++n)i[n]=e[n][2];return i}(n),this.bounds=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]];for(m=0;m<n.length;++m)for(var g=n[m],x=0;x<3;++x)!isNaN(g[x])&&isFinite(g[x])&&(this.bounds[0][x]=Math.min(this.bounds[0][x],g[x]),this.bounds[1][x]=Math.max(this.bounds[1][x],g[x]));var b=0;e:for(m=0;m<i.length;++m){var T=i[m];switch(T.length){case 3:for(x=0;x<3;++x){g=n[M=T[x]];for(var w=0;w<3;++w)if(isNaN(g[w])||!isFinite(g[w]))continue e}for(x=0;x<3;++x){var M;g=n[M=T[2-x]];o.push(g[0],g[1],g[2],g[3]);var S=r[M];s.push(S[0],S[1],S[2],S[3]||0);var j,A=p;3===A.length?a.push(A[0],A[1],A[2],1):a.push(A[0],A[1],A[2],A[3]),j=d?[(d[M]-f)/(v-f),0]:[(g[2]-f)/(v-f),0],l.push(j[0],j[1]),u.push(m)}b+=1}}this.triangleCount=b,this.trianglePositions.update(o),this.triangleVectors.update(s),this.triangleColors.update(a),this.triangleUVs.update(l),this.triangleIds.update(new Uint32Array(u))}},d.drawTransparent=d.draw=function(e){e=e||{};for(var t=this.gl,i=e.model||u,n=e.view||u,r=e.projection||u,o=[[-1e6,-1e6,-1e6],[1e6,1e6,1e6]],s=0;s<3;++s)o[0][s]=Math.max(o[0][s],this.clipBounds[0][s]),o[1][s]=Math.min(o[1][s],this.clipBounds[1][s]);var c={model:i,view:n,projection:r,inverseModel:u.slice(),clipBounds:o,kambient:this.ambientLight,kdiffuse:this.diffuseLight,kspecular:this.specularLight,roughness:this.roughness,fresnel:this.fresnel,eyePosition:[0,0,0],lightPosition:[0,0,0],opacity:this.opacity,tubeScale:this.tubeScale,vectorScale:this.vectorScale,coneScale:this.coneScale,coneOffset:this.coneOffset,texture:0};c.inverseModel=l(c.inverseModel,c.model),t.disable(t.CULL_FACE),this.texture.bind(0);var h=new Array(16);a(h,c.view,c.model),a(h,c.projection,h),l(h,h);for(s=0;s<3;++s)c.eyePosition[s]=h[12+s]/h[15];var p=h[15];for(s=0;s<3;++s)p+=this.lightPosition[s]*h[4*s+3];for(s=0;s<3;++s){for(var d=h[12+s],f=0;f<3;++f)d+=h[4*f+s]*this.lightPosition[f];c.lightPosition[s]=d/p}if(this.triangleCount>0){var v=this.triShader;v.bind(),v.uniforms=c,this.triangleVAO.bind(),t.drawArrays(t.TRIANGLES,0,3*this.triangleCount),this.triangleVAO.unbind()}},d.drawPick=function(e){e=e||{};for(var t=this.gl,i=e.model||u,n=e.view||u,r=e.projection||u,o=[[-1e6,-1e6,-1e6],[1e6,1e6,1e6]],s=0;s<3;++s)o[0][s]=Math.max(o[0][s],this.clipBounds[0][s]),o[1][s]=Math.min(o[1][s],this.clipBounds[1][s]);this._model=[].slice.call(i),this._view=[].slice.call(n),this._projection=[].slice.call(r),this._resolution=[t.drawingBufferWidth,t.drawingBufferHeight];var a={model:i,view:n,projection:r,clipBounds:o,tubeScale:this.tubeScale,vectorScale:this.vectorScale,coneScale:this.coneScale,coneOffset:this.coneOffset,pickId:this.pickId/255},l=this.pickShader;l.bind(),l.uniforms=a,this.triangleCount>0&&(this.triangleVAO.bind(),t.drawArrays(t.TRIANGLES,0,3*this.triangleCount),this.triangleVAO.unbind())},d.pick=function(e){if(!e)return null;if(e.id!==this.pickId)return null;var t=e.value[0]+256*e.value[1]+65536*e.value[2],i=this.cells[t],n=this.positions[i[1]].slice(0,3),r={position:n,dataCoordinate:n,index:Math.floor(i[1]/48)};return"cone"===this.traceType?r.index=Math.floor(i[1]/48):"streamtube"===this.traceType&&(r.intensity=this.intensity[i[1]],r.velocity=this.vectors[i[1]].slice(0,3),r.divergence=this.vectors[i[1]][3],r.index=t),r},d.dispose=function(){this.texture.dispose(),this.triShader.dispose(),this.pickShader.dispose(),this.triangleVAO.dispose(),this.trianglePositions.dispose(),this.triangleVectors.dispose(),this.triangleColors.dispose(),this.triangleUVs.dispose(),this.triangleIds.dispose()},e.exports=function(e,t,i){var n=i.shaders;1===arguments.length&&(e=(t=e).gl);var a=f(e,n),l=v(e,n),h=s(e,c(new Uint8Array([255,255,255,255]),[1,1,4]));h.generateMipmap(),h.minFilter=e.LINEAR_MIPMAP_LINEAR,h.magFilter=e.LINEAR;var u=r(e),d=r(e),m=r(e),y=r(e),g=r(e),x=o(e,[{buffer:u,type:e.FLOAT,size:4},{buffer:g,type:e.UNSIGNED_BYTE,size:4,normalized:!0},{buffer:m,type:e.FLOAT,size:4},{buffer:y,type:e.FLOAT,size:2},{buffer:d,type:e.FLOAT,size:4}]),b=new p(e,h,a,l,u,d,g,m,y,x,i.traceType||"cone");return b.update(t),b}},611:function(e,t,i){"use strict";var n=i(382),r=i(396),o=i(391).hovertemplateAttrs,s=i(399),a=i(387).extendFlat,l=i(394).overrideAll;function c(e){return{valType:"boolean",role:"info",dflt:!1,description:["Determines whether or not these contour lines are projected","on the",e,"plane.","If `highlight` is set to *true* (the default), the projected","lines are shown on hover.","If `show` is set to *true*, the projected lines are shown","in permanence."].join(" ")}}function h(e){return{show:{valType:"boolean",role:"info",dflt:!1,description:["Determines whether or not contour lines about the",e,"dimension are drawn."].join(" ")},start:{valType:"number",dflt:null,role:"style",editType:"plot",description:["Sets the starting contour level value.","Must be less than `contours.end`"].join(" ")},end:{valType:"number",dflt:null,role:"style",editType:"plot",description:["Sets the end contour level value.","Must be more than `contours.start`"].join(" ")},size:{valType:"number",dflt:null,min:0,role:"style",editType:"plot",description:["Sets the step between each contour level.","Must be positive."].join(" ")},project:{x:c("x"),y:c("y"),z:c("z")},color:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets the color of the contour lines."},usecolormap:{valType:"boolean",role:"info",dflt:!1,description:["An alternate to *color*.","Determines whether or not the contour lines are colored using","the trace *colorscale*."].join(" ")},width:{valType:"number",role:"style",min:1,max:16,dflt:2,description:"Sets the width of the contour lines."},highlight:{valType:"boolean",role:"info",dflt:!0,description:["Determines whether or not contour lines about the",e,"dimension are highlighted on hover."].join(" ")},highlightcolor:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets the color of the highlighted contour lines."},highlightwidth:{valType:"number",role:"style",min:1,max:16,dflt:2,description:"Sets the width of the highlighted contour lines."}}}var u=e.exports=l(a({z:{valType:"data_array",description:"Sets the z coordinates."},x:{valType:"data_array",description:"Sets the x coordinates."},y:{valType:"data_array",description:"Sets the y coordinates."},text:{valType:"string",role:"info",dflt:"",arrayOk:!0,description:["Sets the text elements associated with each z value.","If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,","these elements will be seen in the hover labels."].join(" ")},hovertext:{valType:"string",role:"info",dflt:"",arrayOk:!0,description:"Same as `text`."},hovertemplate:o(),connectgaps:{valType:"boolean",dflt:!1,role:"info",editType:"calc",description:["Determines whether or not gaps","(i.e. {nan} or missing values)","in the `z` data are filled in."].join(" ")},surfacecolor:{valType:"data_array",description:["Sets the surface color values,","used for setting a color scale independent of `z`."].join(" ")}},r("",{colorAttr:"z or surfacecolor",showScaleDflt:!0,autoColorDflt:!1,editTypeOverride:"calc"}),{contours:{x:h("x"),y:h("y"),z:h("z")},hidesurface:{valType:"boolean",role:"info",dflt:!1,description:["Determines whether or not a surface is drawn.","For example, set `hidesurface` to *false*","`contours.x.show` to *true* and","`contours.y.show` to *true* to draw a wire frame plot."].join(" ")},lightposition:{x:{valType:"number",role:"style",min:-1e5,max:1e5,dflt:10,description:"Numeric vector, representing the X coordinate for each vertex."},y:{valType:"number",role:"style",min:-1e5,max:1e5,dflt:1e4,description:"Numeric vector, representing the Y coordinate for each vertex."},z:{valType:"number",role:"style",min:-1e5,max:1e5,dflt:0,description:"Numeric vector, representing the Z coordinate for each vertex."}},lighting:{ambient:{valType:"number",role:"style",min:0,max:1,dflt:.8,description:"Ambient light increases overall color visibility but can wash out the image."},diffuse:{valType:"number",role:"style",min:0,max:1,dflt:.8,description:"Represents the extent that incident rays are reflected in a range of angles."},specular:{valType:"number",role:"style",min:0,max:2,dflt:.05,description:"Represents the level that incident rays are reflected in a single direction, causing shine."},roughness:{valType:"number",role:"style",min:0,max:1,dflt:.5,description:"Alters specular reflection; the rougher the surface, the wider and less contrasty the shine."},fresnel:{valType:"number",role:"style",min:0,max:5,dflt:.2,description:["Represents the reflectance as a dependency of the viewing angle; e.g. paper is reflective","when viewing it from the edge of the paper (almost 90 degrees), causing shine."].join(" ")}},opacity:{valType:"number",role:"style",min:0,max:1,dflt:1,description:["Sets the opacity of the surface.","Please note that in the case of using high `opacity` values for example a value","greater than or equal to 0.5 on two surfaces (and 0.25 with four surfaces), an","overlay of multiple transparent surfaces may not perfectly be sorted in depth by the","webgl API. This behavior may be improved in the near future and is subject to change."].join(" ")},opacityscale:{valType:"any",role:"style",editType:"calc",description:["Sets the opacityscale."," The opacityscale must be an array containing"," arrays mapping a normalized value to an opacity value."," At minimum, a mapping for the lowest (0) and highest (1)"," values are required. For example,"," `[[0, 1], [0.5, 0.2], [1, 1]]` means that higher/lower values would have"," higher opacity values and those in the middle would be more transparent"," Alternatively, `opacityscale` may be a palette name string"," of the following list: 'min', 'max', 'extremes' and 'uniform'."," The default is 'uniform'."].join("")},_deprecated:{zauto:a({},r.zauto,{description:"Obsolete. Use `cauto` instead."}),zmin:a({},r.zmin,{description:"Obsolete. Use `cmin` instead."}),zmax:a({},r.zmax,{description:"Obsolete. Use `cmax` instead."})},hoverinfo:a({},s.hoverinfo),showlegend:a({},s.showlegend,{dflt:!1})}),"calc","nested");u.x.editType=u.y.editType=u.z.editType="calc+clearAxisTypes",u.transforms=void 0},676:function(e,t,i){"use strict";var n=i(396),r=i(391).hovertemplateAttrs,o=i(611),s=i(399),a=i(387).extendFlat;e.exports=a({x:{valType:"data_array",editType:"calc+clearAxisTypes",description:["Sets the X coordinates of the vertices. The nth element of vectors `x`, `y` and `z`","jointly represent the X, Y and Z coordinates of the nth vertex."].join(" ")},y:{valType:"data_array",editType:"calc+clearAxisTypes",description:["Sets the Y coordinates of the vertices. The nth element of vectors `x`, `y` and `z`","jointly represent the X, Y and Z coordinates of the nth vertex."].join(" ")},z:{valType:"data_array",editType:"calc+clearAxisTypes",description:["Sets the Z coordinates of the vertices. The nth element of vectors `x`, `y` and `z`","jointly represent the X, Y and Z coordinates of the nth vertex."].join(" ")},i:{valType:"data_array",editType:"calc",description:["A vector of vertex indices, i.e. integer values between 0 and the length of the vertex","vectors, representing the *first* vertex of a triangle. For example, `{i[m], j[m], k[m]}`","together represent face m (triangle m) in the mesh, where `i[m] = n` points to the triplet","`{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `i` represents a","point in space, which is the first vertex of a triangle."].join(" ")},j:{valType:"data_array",editType:"calc",description:["A vector of vertex indices, i.e. integer values between 0 and the length of the vertex","vectors, representing the *second* vertex of a triangle. For example, `{i[m], j[m], k[m]}` ","together represent face m (triangle m) in the mesh, where `j[m] = n` points to the triplet","`{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `j` represents a","point in space, which is the second vertex of a triangle."].join(" ")},k:{valType:"data_array",editType:"calc",description:["A vector of vertex indices, i.e. integer values between 0 and the length of the vertex","vectors, representing the *third* vertex of a triangle. For example, `{i[m], j[m], k[m]}`","together represent face m (triangle m) in the mesh, where `k[m] = n` points to the triplet ","`{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `k` represents a","point in space, which is the third vertex of a triangle."].join(" ")},text:{valType:"string",role:"info",dflt:"",arrayOk:!0,editType:"calc",description:["Sets the text elements associated with the vertices.","If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,","these elements will be seen in the hover labels."].join(" ")},hovertext:{valType:"string",role:"info",dflt:"",arrayOk:!0,editType:"calc",description:"Same as `text`."},hovertemplate:r({editType:"calc"}),delaunayaxis:{valType:"enumerated",role:"info",values:["x","y","z"],dflt:"z",editType:"calc",description:["Sets the Delaunay axis, which is the axis that is perpendicular to the surface of the","Delaunay triangulation.","It has an effect if `i`, `j`, `k` are not provided and `alphahull` is set to indicate","Delaunay triangulation."].join(" ")},alphahull:{valType:"number",role:"style",dflt:-1,editType:"calc",description:["Determines how the mesh surface triangles are derived from the set of","vertices (points) represented by the `x`, `y` and `z` arrays, if","the `i`, `j`, `k` arrays are not supplied.","For general use of `mesh3d` it is preferred that `i`, `j`, `k` are","supplied.","If *-1*, Delaunay triangulation is used, which is mainly suitable if the","mesh is a single, more or less layer surface that is perpendicular to `delaunayaxis`.","In case the `delaunayaxis` intersects the mesh surface at more than one point","it will result triangles that are very long in the dimension of `delaunayaxis`.","If *>0*, the alpha-shape algorithm is used. In this case, the positive `alphahull` value","signals the use of the alpha-shape algorithm, _and_ its value","acts as the parameter for the mesh fitting.","If *0*,  the convex-hull algorithm is used. It is suitable for convex bodies","or if the intention is to enclose the `x`, `y` and `z` point set into a convex","hull."].join(" ")},intensity:{valType:"data_array",editType:"calc",description:["Sets the intensity values for vertices or cells","as defined by `intensitymode`.","It can be used for plotting fields on meshes."].join(" ")},intensitymode:{valType:"enumerated",values:["vertex","cell"],dflt:"vertex",editType:"calc",role:"info",description:["Determines the source of `intensity` values."].join(" ")},color:{valType:"color",role:"style",editType:"calc",description:"Sets the color of the whole mesh"},vertexcolor:{valType:"data_array",role:"style",editType:"calc",description:["Sets the color of each vertex","Overrides *color*. While Red, green and blue colors","are in the range of 0 and 255; in the case of having","vertex color data in RGBA format, the alpha color","should be normalized to be between 0 and 1."].join(" ")},facecolor:{valType:"data_array",role:"style",editType:"calc",description:["Sets the color of each face","Overrides *color* and *vertexcolor*."].join(" ")},transforms:void 0},n("",{colorAttr:"`intensity`",showScaleDflt:!0,editTypeOverride:"calc"}),{opacity:o.opacity,flatshading:{valType:"boolean",role:"style",dflt:!1,editType:"calc",description:["Determines whether or not normal smoothing is applied to the meshes,","creating meshes with an angular, low-poly look via flat reflections."].join(" ")},contour:{show:a({},o.contours.x.show,{description:["Sets whether or not dynamic contours are shown on hover"].join(" ")}),color:o.contours.x.color,width:o.contours.x.width,editType:"calc"},lightposition:{x:a({},o.lightposition.x,{dflt:1e5}),y:a({},o.lightposition.y,{dflt:1e5}),z:a({},o.lightposition.z,{dflt:0}),editType:"calc"},lighting:a({vertexnormalsepsilon:{valType:"number",role:"style",min:0,max:1,dflt:1e-12,editType:"calc",description:"Epsilon for vertex normals calculation avoids math issues arising from degenerate geometry."},facenormalsepsilon:{valType:"number",role:"style",min:0,max:1,dflt:1e-6,editType:"calc",description:"Epsilon for face normals calculation avoids math issues arising from degenerate geometry."},editType:"calc"},o.lighting),hoverinfo:a({},s.hoverinfo,{editType:"calc"}),showlegend:a({},s.showlegend,{dflt:!1})})},677:function(e,t,i){"use strict";e.exports=function(e,t,i,n){n=n||e.length;for(var r=new Array(n),o=0;o<n;o++)r[o]=[e[o],t[o],i[o]];return r}},884:function(e,t,i){"use strict";var n=i(1052);e.exports=function(e,t){var i=e.positions,r=e.vectors,o={positions:[],vertexIntensity:[],vertexIntensityBounds:e.vertexIntensityBounds,vectors:[],cells:[],coneOffset:e.coneOffset,colormap:e.colormap};if(0===e.positions.length)return t&&(t[0]=[0,0,0],t[1]=[0,0,0]),o;for(var s=0,a=1/0,l=-1/0,c=1/0,h=-1/0,u=1/0,p=-1/0,d=null,f=null,v=[],m=1/0,y=!1,g=0;g<i.length;g++){var x=i[g];a=Math.min(x[0],a),l=Math.max(x[0],l),c=Math.min(x[1],c),h=Math.max(x[1],h),u=Math.min(x[2],u),p=Math.max(x[2],p);var b=r[g];if(n.length(b)>s&&(s=n.length(b)),g){var T=2*n.distance(d,x)/(n.length(f)+n.length(b));T?(m=Math.min(m,T),y=!1):y=!0}y||(d=x,f=b),v.push(b)}var w=[a,c,u],M=[l,h,p];t&&(t[0]=w,t[1]=M),0===s&&(s=1);var S=1/s;isFinite(m)||(m=1),o.vectorScale=m;var j=e.coneSize||.5;e.absoluteConeSize&&(j=e.absoluteConeSize*S),o.coneScale=j;g=0;for(var A=0;g<i.length;g++)for(var z=(x=i[g])[0],I=x[1],k=x[2],O=v[g],_=n.length(O)*S,L=0;L<8;L++){o.positions.push([z,I,k,A++]),o.positions.push([z,I,k,A++]),o.positions.push([z,I,k,A++]),o.positions.push([z,I,k,A++]),o.positions.push([z,I,k,A++]),o.positions.push([z,I,k,A++]),o.vectors.push(O),o.vectors.push(O),o.vectors.push(O),o.vectors.push(O),o.vectors.push(O),o.vectors.push(O),o.vertexIntensity.push(_,_,_),o.vertexIntensity.push(_,_,_);var P=o.positions.length;o.cells.push([P-6,P-5,P-4],[P-3,P-2,P-1])}return o};var r=i(1282);e.exports.createMesh=i(1283),e.exports.createConeMesh=function(t,i){return e.exports.createMesh(t,i,{shaders:r,traceType:"cone"})}}}]);